{
  "collection": {
    "item": [
      {
        "id": "615680e4-f28a-46be-b9e5-a03aa030ca43",
        "name": "Service Health Check",
        "request": {
          "url": {
            "path": [
              "health"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "15cd709f-a0aa-4c6b-a96e-c5f2b0e1eb8e",
              "type": "text/javascript",
              "exec": [
                "pm.test('Service is running', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Has version info', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('version');",
                "});"
              ],
              "_lastExecutionId": "47cca670-7e32-4e9a-b4d2-833f253500a9"
            }
          }
        ]
      },
      {
        "id": "de33bc38-87ec-45e9-a2e3-03335e789554",
        "name": "API Documentation Check",
        "request": {
          "url": {
            "path": [
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
              "type": "text/javascript",
              "exec": [
                "pm.test('API docs available', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Shows available endpoints', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('endpoints');",
                "    pm.expect(responseJson.endpoints).to.be.an('array');",
                "});",
                "",
                "pm.test('Has auth verification endpoint', function () {",
                "    const responseJson = pm.response.json();",
                "    const authEndpoint = responseJson.endpoints.find(ep => ep.path === '/api/auth/verify');",
                "    pm.expect(authEndpoint).to.exist;",
                "});"
              ],
              "_lastExecutionId": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
            }
          }
        ]
      },
      {
        "id": "d60b61e9-ef71-4542-8f1c-c4396c5f5345",
        "name": "SallyPort Authentication Test",
        "request": {
          "url": {
            "path": [
              "api",
              "auth",
              "verify"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "429141a6-a495-4521-8097-d5aabbee830f",
              "type": "text/javascript",
              "exec": [
                "pm.test('SallyPort auth endpoint responds', function () {",
                "    // Accept any response that's not a generic 404",
                "    const response = pm.response.json();",
                "    pm.expect(pm.response.code).to.not.equal(404);",
                "});",
                "",
                "pm.test('Returns structured response', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('object');",
                "});"
              ],
              "_lastExecutionId": "3461c2bd-ec2b-4126-9cc1-cc1a3cc960cf"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [
      {
        "type": "any",
        "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
        "key": "base_url"
      }
    ],
    "info": {
      "_postman_id": "556bbcb0-c67c-406a-90e7-2144dc498159",
      "name": "SallyPort Status Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Testing current SallyPort integration status",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "31b25221-96d0-4763-925c-ed88925e85b9",
    "values": []
  },
  "globals": {
    "id": "a1bfcb69-38e1-448e-bb87-851dad2a2308",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 7,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 193,
      "responseMin": 100,
      "responseMax": 297,
      "responseSd": 80.80016501633315,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1753901413936,
      "completed": 1753901414585
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2949580b-8985-417c-b312-4c157207c2d4",
          "httpRequestId": "959bba35-a3d1-42f9-83f1-3fe1a88dc3d4"
        },
        "item": {
          "id": "615680e4-f28a-46be-b9e5-a03aa030ca43",
          "name": "Service Health Check",
          "request": {
            "url": {
              "path": [
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15cd709f-a0aa-4c6b-a96e-c5f2b0e1eb8e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Service is running', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has version info', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('version');",
                  "});"
                ],
                "_lastExecutionId": "47cca670-7e32-4e9a-b4d2-833f253500a9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "health"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9a43def4-5ac6-4d2c-9413-6a5d30511d74",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "708a7aa2-ace9-4e88-84d4-28baac848b15",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"ec-icl2U51RfevJHLiHHQp9LFkfd0w\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "c4b34c35a32b4e4bc79b9037d82d2acf;o=1"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 18:50:14 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "236"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              49,
              56,
              58,
              53,
              48,
              58,
              49,
              52,
              46,
              50,
              54,
              54,
              90,
              34,
              44,
              34,
              117,
              112,
              116,
              105,
              109,
              101,
              34,
              58,
              52,
              49,
              48,
              53,
              52,
              57,
              46,
              54,
              57,
              53,
              54,
              56,
              52,
              57,
              53,
              52,
              44,
              34,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              34,
              58,
              34,
              100,
              101,
              118,
              101,
              108,
              111,
              112,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              109,
              101,
              109,
              111,
              114,
              121,
              34,
              58,
              123,
              34,
              114,
              115,
              115,
              34,
              58,
              53,
              53,
              55,
              55,
              49,
              49,
              51,
              54,
              44,
              34,
              104,
              101,
              97,
              112,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              56,
              56,
              56,
              56,
              51,
              50,
              48,
              44,
              34,
              104,
              101,
              97,
              112,
              85,
              115,
              101,
              100,
              34,
              58,
              56,
              49,
              54,
              55,
              55,
              54,
              56,
              44,
              34,
              101,
              120,
              116,
              101,
              114,
              110,
              97,
              108,
              34,
              58,
              50,
              48,
              52,
              55,
              51,
              54,
              51,
              44,
              34,
              97,
              114,
              114,
              97,
              121,
              66,
              117,
              102,
              102,
              101,
              114,
              115,
              34,
              58,
              49,
              54,
              57,
              57,
              48,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 297,
          "responseSize": 236
        },
        "id": "615680e4-f28a-46be-b9e5-a03aa030ca43",
        "assertions": [
          {
            "assertion": "Service is running",
            "skipped": false
          },
          {
            "assertion": "Has version info",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cd11e9e1-cbd4-484d-a27b-2e2ae4fe5cf6",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "94dc1228-c6d5-4a60-a93c-3c528e6ab0f4"
        },
        "item": {
          "id": "de33bc38-87ec-45e9-a2e3-03335e789554",
          "name": "API Documentation Check",
          "request": {
            "url": {
              "path": [
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
                "type": "text/javascript",
                "exec": [
                  "pm.test('API docs available', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Shows available endpoints', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('endpoints');",
                  "    pm.expect(responseJson.endpoints).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Has auth verification endpoint', function () {",
                  "    const responseJson = pm.response.json();",
                  "    const authEndpoint = responseJson.endpoints.find(ep => ep.path === '/api/auth/verify');",
                  "    pm.expect(authEndpoint).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              ""
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0322bbb7-478c-4a8a-85d5-1a6e268bd0b6",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f3724631-322c-4b21-8e61-c2b85785a863",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"5e-3xnVjxUUjgXTRc1/c1Us6PcKwh4\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "e3b7318bf2d2baf6c79b9037d82d24f2"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 18:50:14 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "94"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              111,
              117,
              116,
              101,
              32,
              71,
              69,
              84,
              32,
              47,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              49,
              56,
              58,
              53,
              48,
              58,
              49,
              52,
              46,
              52,
              55,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 182,
          "responseSize": 94
        },
        "id": "de33bc38-87ec-45e9-a2e3-03335e789554",
        "assertions": [
          {
            "assertion": "API docs available",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "API docs available",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Shows available endpoints",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Shows available endpoints",
              "message": "expected { error: 'Not found', …(2) } to have property 'endpoints'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'endpoints'\n   at Object.eval sandbox-script.js:2:2)"
            }
          },
          {
            "assertion": "Has auth verification endpoint",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "Has auth verification endpoint",
              "message": "Cannot read properties of undefined (reading 'find')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'find')\n   at Object.eval sandbox-script.js:3:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "2e07b437-e79c-4534-8f75-1450d3ed572b",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "44f3562a-b92b-49dc-819a-125219f41a18"
        },
        "item": {
          "id": "d60b61e9-ef71-4542-8f1c-c4396c5f5345",
          "name": "SallyPort Authentication Test",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "verify"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "429141a6-a495-4521-8097-d5aabbee830f",
                "type": "text/javascript",
                "exec": [
                  "pm.test('SallyPort auth endpoint responds', function () {",
                  "    // Accept any response that's not a generic 404",
                  "    const response = pm.response.json();",
                  "    pm.expect(pm.response.code).to.not.equal(404);",
                  "});",
                  "",
                  "pm.test('Returns structured response', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('object');",
                  "});"
                ],
                "_lastExecutionId": "3461c2bd-ec2b-4126-9cc1-cc1a3cc960cf"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "auth",
              "verify"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6776e0a7-4318-4e08-997b-f1c21dc9a270",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "54",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
          }
        },
        "response": {
          "id": "09659732-b7da-4d06-9627-43279a7d528b",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"6e-Q1P5fcVPTtNYKPyzyskjRgjJ+w0\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "13d9d68f341f41c1c79b9037d82d2685"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 18:50:14 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "110"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              111,
              117,
              116,
              101,
              32,
              80,
              79,
              83,
              84,
              32,
              47,
              97,
              112,
              105,
              47,
              97,
              117,
              116,
              104,
              47,
              118,
              101,
              114,
              105,
              102,
              121,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              49,
              56,
              58,
              53,
              48,
              58,
              49,
              52,
              46,
              54,
              48,
              50,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 100,
          "responseSize": 110
        },
        "id": "d60b61e9-ef71-4542-8f1c-c4396c5f5345",
        "assertions": [
          {
            "assertion": "SallyPort auth endpoint responds",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "SallyPort auth endpoint responds",
              "message": "expected 404 to not equal 404",
              "stack": "AssertionError: expected 404 to not equal 404\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Returns structured response",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 440
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "API docs available",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "6e4843054d698b36e422f05d5fbbc671",
          "id": "a8073ae8-b39d-4326-8e5e-31504266ac87",
          "timestamp": 1753901414460,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "de33bc38-87ec-45e9-a2e3-03335e789554",
          "name": "API Documentation Check",
          "request": {
            "url": {
              "path": [
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
                "type": "text/javascript",
                "exec": [
                  "pm.test('API docs available', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Shows available endpoints', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('endpoints');",
                  "    pm.expect(responseJson.endpoints).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Has auth verification endpoint', function () {",
                  "    const responseJson = pm.response.json();",
                  "    const authEndpoint = responseJson.endpoints.find(ep => ep.path === '/api/auth/verify');",
                  "    pm.expect(authEndpoint).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "615680e4-f28a-46be-b9e5-a03aa030ca43",
              "name": "Service Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15cd709f-a0aa-4c6b-a96e-c5f2b0e1eb8e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Service is running', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has version info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('version');",
                      "});"
                    ],
                    "_lastExecutionId": "47cca670-7e32-4e9a-b4d2-833f253500a9"
                  }
                }
              ]
            },
            {
              "id": "de33bc38-87ec-45e9-a2e3-03335e789554",
              "name": "API Documentation Check",
              "request": {
                "url": {
                  "path": [
                    ""
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('API docs available', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Shows available endpoints', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('endpoints');",
                      "    pm.expect(responseJson.endpoints).to.be.an('array');",
                      "});",
                      "",
                      "pm.test('Has auth verification endpoint', function () {",
                      "    const responseJson = pm.response.json();",
                      "    const authEndpoint = responseJson.endpoints.find(ep => ep.path === '/api/auth/verify');",
                      "    pm.expect(authEndpoint).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
                  }
                }
              ]
            },
            {
              "id": "d60b61e9-ef71-4542-8f1c-c4396c5f5345",
              "name": "SallyPort Authentication Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "429141a6-a495-4521-8097-d5aabbee830f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('SallyPort auth endpoint responds', function () {",
                      "    // Accept any response that's not a generic 404",
                      "    const response = pm.response.json();",
                      "    pm.expect(pm.response.code).to.not.equal(404);",
                      "});",
                      "",
                      "pm.test('Returns structured response', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('object');",
                      "});"
                    ],
                    "_lastExecutionId": "3461c2bd-ec2b-4126-9cc1-cc1a3cc960cf"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "556bbcb0-c67c-406a-90e7-2144dc498159",
            "name": "SallyPort Status Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing current SallyPort integration status",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "cd11e9e1-cbd4-484d-a27b-2e2ae4fe5cf6",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "94dc1228-c6d5-4a60-a93c-3c528e6ab0f4",
          "scriptId": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
          "execution": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Shows available endpoints",
          "message": "expected { error: 'Not found', …(2) } to have property 'endpoints'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'endpoints'\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "18c8ac9ba65e0e18b7cd7087cf86757a",
          "id": "8e7a0964-3d9c-4953-a4dd-f7a4f4eb121d",
          "timestamp": 1753901414465,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "de33bc38-87ec-45e9-a2e3-03335e789554",
          "name": "API Documentation Check",
          "request": {
            "url": {
              "path": [
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
                "type": "text/javascript",
                "exec": [
                  "pm.test('API docs available', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Shows available endpoints', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('endpoints');",
                  "    pm.expect(responseJson.endpoints).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Has auth verification endpoint', function () {",
                  "    const responseJson = pm.response.json();",
                  "    const authEndpoint = responseJson.endpoints.find(ep => ep.path === '/api/auth/verify');",
                  "    pm.expect(authEndpoint).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "615680e4-f28a-46be-b9e5-a03aa030ca43",
              "name": "Service Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15cd709f-a0aa-4c6b-a96e-c5f2b0e1eb8e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Service is running', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has version info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('version');",
                      "});"
                    ],
                    "_lastExecutionId": "47cca670-7e32-4e9a-b4d2-833f253500a9"
                  }
                }
              ]
            },
            {
              "id": "de33bc38-87ec-45e9-a2e3-03335e789554",
              "name": "API Documentation Check",
              "request": {
                "url": {
                  "path": [
                    ""
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('API docs available', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Shows available endpoints', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('endpoints');",
                      "    pm.expect(responseJson.endpoints).to.be.an('array');",
                      "});",
                      "",
                      "pm.test('Has auth verification endpoint', function () {",
                      "    const responseJson = pm.response.json();",
                      "    const authEndpoint = responseJson.endpoints.find(ep => ep.path === '/api/auth/verify');",
                      "    pm.expect(authEndpoint).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
                  }
                }
              ]
            },
            {
              "id": "d60b61e9-ef71-4542-8f1c-c4396c5f5345",
              "name": "SallyPort Authentication Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "429141a6-a495-4521-8097-d5aabbee830f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('SallyPort auth endpoint responds', function () {",
                      "    // Accept any response that's not a generic 404",
                      "    const response = pm.response.json();",
                      "    pm.expect(pm.response.code).to.not.equal(404);",
                      "});",
                      "",
                      "pm.test('Returns structured response', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('object');",
                      "});"
                    ],
                    "_lastExecutionId": "3461c2bd-ec2b-4126-9cc1-cc1a3cc960cf"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "556bbcb0-c67c-406a-90e7-2144dc498159",
            "name": "SallyPort Status Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing current SallyPort integration status",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "cd11e9e1-cbd4-484d-a27b-2e2ae4fe5cf6",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "94dc1228-c6d5-4a60-a93c-3c528e6ab0f4",
          "scriptId": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
          "execution": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
        }
      },
      {
        "error": {
          "name": "TypeError",
          "index": 2,
          "test": "Has auth verification endpoint",
          "message": "Cannot read properties of undefined (reading 'find')",
          "stack": "TypeError: Cannot read properties of undefined (reading 'find')\n   at Object.eval sandbox-script.js:3:2)",
          "checksum": "e9fbf2883ea0c336736ab9d898a9d6b5",
          "id": "e4dbe0d6-78a9-4dd6-9f71-80da7fb51b48",
          "timestamp": 1753901414466,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "de33bc38-87ec-45e9-a2e3-03335e789554",
          "name": "API Documentation Check",
          "request": {
            "url": {
              "path": [
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
                "type": "text/javascript",
                "exec": [
                  "pm.test('API docs available', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Shows available endpoints', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('endpoints');",
                  "    pm.expect(responseJson.endpoints).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Has auth verification endpoint', function () {",
                  "    const responseJson = pm.response.json();",
                  "    const authEndpoint = responseJson.endpoints.find(ep => ep.path === '/api/auth/verify');",
                  "    pm.expect(authEndpoint).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "615680e4-f28a-46be-b9e5-a03aa030ca43",
              "name": "Service Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15cd709f-a0aa-4c6b-a96e-c5f2b0e1eb8e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Service is running', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has version info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('version');",
                      "});"
                    ],
                    "_lastExecutionId": "47cca670-7e32-4e9a-b4d2-833f253500a9"
                  }
                }
              ]
            },
            {
              "id": "de33bc38-87ec-45e9-a2e3-03335e789554",
              "name": "API Documentation Check",
              "request": {
                "url": {
                  "path": [
                    ""
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('API docs available', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Shows available endpoints', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('endpoints');",
                      "    pm.expect(responseJson.endpoints).to.be.an('array');",
                      "});",
                      "",
                      "pm.test('Has auth verification endpoint', function () {",
                      "    const responseJson = pm.response.json();",
                      "    const authEndpoint = responseJson.endpoints.find(ep => ep.path === '/api/auth/verify');",
                      "    pm.expect(authEndpoint).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
                  }
                }
              ]
            },
            {
              "id": "d60b61e9-ef71-4542-8f1c-c4396c5f5345",
              "name": "SallyPort Authentication Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "429141a6-a495-4521-8097-d5aabbee830f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('SallyPort auth endpoint responds', function () {",
                      "    // Accept any response that's not a generic 404",
                      "    const response = pm.response.json();",
                      "    pm.expect(pm.response.code).to.not.equal(404);",
                      "});",
                      "",
                      "pm.test('Returns structured response', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('object');",
                      "});"
                    ],
                    "_lastExecutionId": "3461c2bd-ec2b-4126-9cc1-cc1a3cc960cf"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "556bbcb0-c67c-406a-90e7-2144dc498159",
            "name": "SallyPort Status Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing current SallyPort integration status",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "cd11e9e1-cbd4-484d-a27b-2e2ae4fe5cf6",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "94dc1228-c6d5-4a60-a93c-3c528e6ab0f4",
          "scriptId": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
          "execution": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "SallyPort auth endpoint responds",
          "message": "expected 404 to not equal 404",
          "stack": "AssertionError: expected 404 to not equal 404\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "bb38e25f4a69f188f13afbba0f380a57",
          "id": "9999d4a3-1045-49bf-a908-997defd7fc13",
          "timestamp": 1753901414580,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d60b61e9-ef71-4542-8f1c-c4396c5f5345",
          "name": "SallyPort Authentication Test",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "verify"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "429141a6-a495-4521-8097-d5aabbee830f",
                "type": "text/javascript",
                "exec": [
                  "pm.test('SallyPort auth endpoint responds', function () {",
                  "    // Accept any response that's not a generic 404",
                  "    const response = pm.response.json();",
                  "    pm.expect(pm.response.code).to.not.equal(404);",
                  "});",
                  "",
                  "pm.test('Returns structured response', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('object');",
                  "});"
                ],
                "_lastExecutionId": "3461c2bd-ec2b-4126-9cc1-cc1a3cc960cf"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "615680e4-f28a-46be-b9e5-a03aa030ca43",
              "name": "Service Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15cd709f-a0aa-4c6b-a96e-c5f2b0e1eb8e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Service is running', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has version info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('version');",
                      "});"
                    ],
                    "_lastExecutionId": "47cca670-7e32-4e9a-b4d2-833f253500a9"
                  }
                }
              ]
            },
            {
              "id": "de33bc38-87ec-45e9-a2e3-03335e789554",
              "name": "API Documentation Check",
              "request": {
                "url": {
                  "path": [
                    ""
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cef24faf-4514-43ec-8df0-f4b5b33ceffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('API docs available', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Shows available endpoints', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('endpoints');",
                      "    pm.expect(responseJson.endpoints).to.be.an('array');",
                      "});",
                      "",
                      "pm.test('Has auth verification endpoint', function () {",
                      "    const responseJson = pm.response.json();",
                      "    const authEndpoint = responseJson.endpoints.find(ep => ep.path === '/api/auth/verify');",
                      "    pm.expect(authEndpoint).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "1accebf4-ab80-484b-a40c-d5bb25e64d31"
                  }
                }
              ]
            },
            {
              "id": "d60b61e9-ef71-4542-8f1c-c4396c5f5345",
              "name": "SallyPort Authentication Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "429141a6-a495-4521-8097-d5aabbee830f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('SallyPort auth endpoint responds', function () {",
                      "    // Accept any response that's not a generic 404",
                      "    const response = pm.response.json();",
                      "    pm.expect(pm.response.code).to.not.equal(404);",
                      "});",
                      "",
                      "pm.test('Returns structured response', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('object');",
                      "});"
                    ],
                    "_lastExecutionId": "3461c2bd-ec2b-4126-9cc1-cc1a3cc960cf"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "556bbcb0-c67c-406a-90e7-2144dc498159",
            "name": "SallyPort Status Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing current SallyPort integration status",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "2e07b437-e79c-4534-8f75-1450d3ed572b",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "44f3562a-b92b-49dc-819a-125219f41a18",
          "scriptId": "429141a6-a495-4521-8097-d5aabbee830f",
          "execution": "3461c2bd-ec2b-4126-9cc1-cc1a3cc960cf"
        }
      }
    ],
    "error": null
  }
}