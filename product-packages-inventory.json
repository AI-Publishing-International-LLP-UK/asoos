{
  "meta": {
    "generated": "2025-09-23T16:46:42.618Z",
    "totalPackages": 25,
    "categories": [
      "VOICE_SYNTHESIS",
      "AI_AGENTS",
      "SECURITY_GATEWAY",
      "MCP_PROTOCOL",
      "OWNER_INTERFACE",
      "DEVELOPMENT_TOOLS",
      "BLOCKCHAIN_SERVICES",
      "INTEGRATION_HUB"
    ],
    "generator": "ASOOS Package Inventory v1.0"
  },
  "summary": {
    "voice-synthesis": {
      "count": 2,
      "packages": ["vls-synthesis-core", "vls-synthesis-core"]
    },
    "ai-agents": {
      "count": 8,
      "packages": [
        "aixtiv-symphony-mcp",
        "aixtiv-symphony-mcp",
        "dr-claude-function",
        "dr-claude-function",
        "integration-gateway-server",
        "integration-gateway-server",
        "vision-lake-functions",
        "vision-lake-functions"
      ]
    },
    "security-gateway": {
      "count": 4,
      "packages": ["integration-gateway", "integration-gateway", "oauth2-cli", "oauth2-cli"]
    },
    "mcp-protocol": {
      "count": 0,
      "packages": []
    },
    "owner-interface": {
      "count": 8,
      "packages": [
        "asoos-owner-interface-latest",
        "asoos-owner-interface-latest",
        "mocoa-interface",
        "mocoa-interface",
        "mocoa-owner-interface-fixed",
        "mocoa-owner-interface-fixed",
        "mocoa-owner-interface-fixed",
        "mocoa-owner-interface-fixed"
      ]
    },
    "development-tools": {
      "count": 1,
      "packages": ["warp-drive-functions"]
    },
    "blockchain-services": {
      "count": 0,
      "packages": []
    },
    "integration-hub": {
      "count": 2,
      "packages": ["api-tertiary", "api-tertiary"]
    }
  },
  "packages": [
    {
      "name": "aixtiv-symphony-mcp",
      "version": "1.0.0",
      "description": "AIXTIV Symphony - Model Context Protocol Integration",
      "category": "ai-agents",
      "path": "integration-gateway/Aixtiv-Symphony",
      "fullPath": "/Users/as/asoos/integration-gateway/Aixtiv-Symphony",
      "mainFile": "index.js",
      "scripts": {
        "start": "node index.js",
        "dev": "node --watch index.js",
        "test": "node tests/simple-test.js",
        "test:newman": "node tests/newman-cttt-runner.cjs",
        "test:basic": "echo 'Running basic AIXTIV Symphony tests...' && NODE_OPTIONS=\"--no-warnings\" node -r ./tests/node-fix.js tests/basic.test.js || echo 'Test completed'",
        "cttt": "node diamond-cli/bin/diamond cttt",
        "newman": "node diamond-cli/bin/diamond newman",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix",
        "mcp": "node index.js",
        "repair": "node diamond-cli/bin/diamond repair",
        "heal": "node diamond-cli/bin/diamond heal",
        "deploy": "node diamond-cli/bin/diamond deploy wfa swarm"
      },
      "dependencies": [
        "@google-cloud/secret-manager",
        "@pinecone-database/pinecone",
        "axios",
        "bull",
        "compression",
        "cors",
        "dotenv",
        "express",
        "helmet",
        "jsonwebtoken",
        "mongodb",
        "nodemailer",
        "pm2",
        "redis",
        "winston"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": false,
      "hasServerFile": false,
      "hasExpressDep": "^4.21.2",
      "keywords": [
        "mcp",
        "model-context-protocol",
        "aixtiv",
        "symphony",
        "diamond-cli",
        "cloud-run",
        "express",
        "newman",
        "cttt"
      ],
      "author": "AI Publishing International LLP",
      "license": "MIT",
      "targetAudience": "Diamond SAO",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-22T23:18:00.449Z"
    },
    {
      "name": "aixtiv-symphony-mcp",
      "version": "1.0.0",
      "description": "AIXTIV Symphony - Model Context Protocol Integration",
      "category": "ai-agents",
      "path": "Aixtiv-Symphony",
      "fullPath": "/Users/as/asoos/Aixtiv-Symphony",
      "mainFile": "index.js",
      "scripts": {
        "start": "node index.js",
        "dev": "node --watch index.js",
        "test": "node tests/simple-test.js",
        "test:newman": "node tests/newman-cttt-runner.cjs",
        "test:basic": "echo 'Running basic AIXTIV Symphony tests...' && NODE_OPTIONS=\"--no-warnings\" node -r ./tests/node-fix.js tests/basic.test.js || echo 'Test completed'",
        "cttt": "node diamond-cli/bin/diamond cttt",
        "newman": "node diamond-cli/bin/diamond newman",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix",
        "mcp": "node index.js",
        "repair": "node diamond-cli/bin/diamond repair",
        "heal": "node diamond-cli/bin/diamond heal",
        "deploy": "node diamond-cli/bin/diamond deploy wfa swarm"
      },
      "dependencies": [
        "@google-cloud/secret-manager",
        "@pinecone-database/pinecone",
        "axios",
        "bull",
        "compression",
        "cors",
        "dotenv",
        "express",
        "googleapis",
        "helmet",
        "hume",
        "jsonwebtoken",
        "mongodb",
        "nodemailer",
        "pm2",
        "redis",
        "uuid",
        "winston"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": false,
      "hasServerFile": false,
      "hasExpressDep": "^4.21.2",
      "keywords": [
        "mcp",
        "model-context-protocol",
        "aixtiv",
        "symphony",
        "diamond-cli",
        "cloud-run",
        "express",
        "newman",
        "cttt"
      ],
      "author": "AI Publishing International LLP",
      "license": "MIT",
      "targetAudience": "Diamond SAO",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T07:16:34.759Z"
    },
    {
      "name": "dr-claude-function",
      "version": "1.0.0",
      "description": "Dr. Claude agent orchestration cloud function for Aixtiv Symphony",
      "category": "ai-agents",
      "path": "integration-gateway/cloud-functions/dr-claude",
      "fullPath": "/Users/as/asoos/integration-gateway/cloud-functions/dr-claude",
      "mainFile": "index.js",
      "scripts": {
        "start": "functions-framework --target=drClaude",
        "deploy": "gcloud functions deploy dr-claude --gen2 --runtime=nodejs22 --region=us-west1 --source=. --entry-point=drClaude --trigger-http --allow-unauthenticated"
      },
      "dependencies": [
        "@google-cloud/firestore",
        "@google-cloud/functions-framework",
        "@google-cloud/logging",
        "cors",
        "express",
        "uuid"
      ],
      "hasDockerfile": false,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.2",
      "keywords": [],
      "targetAudience": "General Business Users",
      "deploymentType": "Web Service",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-22T23:18:00.450Z"
    },
    {
      "name": "dr-claude-function",
      "version": "1.0.0",
      "description": "Dr. Claude agent orchestration cloud function for Aixtiv Symphony",
      "category": "ai-agents",
      "path": "cloud-functions/dr-claude",
      "fullPath": "/Users/as/asoos/cloud-functions/dr-claude",
      "mainFile": "index.js",
      "scripts": {
        "start": "functions-framework --target=drClaude",
        "deploy": "gcloud functions deploy dr-claude --gen2 --runtime=nodejs22 --region=us-west1 --source=. --entry-point=drClaude --trigger-http --allow-unauthenticated"
      },
      "dependencies": [
        "@google-cloud/firestore",
        "@google-cloud/functions-framework",
        "@google-cloud/logging",
        "cors",
        "express",
        "uuid"
      ],
      "hasDockerfile": false,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.2",
      "keywords": [],
      "targetAudience": "General Business Users",
      "deploymentType": "Web Service",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T07:59:08.474Z"
    },
    {
      "name": "integration-gateway-server",
      "version": "1.0.0",
      "description": "Integration Gateway Backend Server - Production Ready",
      "category": "ai-agents",
      "path": "integration-gateway",
      "fullPath": "/Users/as/asoos/integration-gateway",
      "mainFile": "server.js",
      "scripts": {
        "build": "echo 'Building VLS Complete System'",
        "deploy": "bash deploy-vls-complete-system.sh",
        "deploy-local": "./scripts/deploy-local.sh",
        "test": "echo 'No tests specified' && exit 0",
        "start": "node -r ./utils/promiseHandler.js server.js",
        "start-safe": "node -r ./utils/promiseHandler.js index.js",
        "security": "node security-framework.js",
        "fix-promises": "node utils/promiseHandler.js",
        "init-agents": "node owner-interface/vls-computationalist-agents.js",
        "monitor-promises": "node scripts/monitor-promise-errors.js",
        "vls-deploy": "bash deploy-vls-complete-system.sh",
        "audit": "npm audit",
        "audit-fix": "npm audit fix",
        "security-check": "npm audit && npm run lint",
        "update-deps": "npm update && npm audit",
        "security-scan": "retire --js --path ./",
        "env-check": "dotenv-linter || echo \"dotenv-linter not installed\"",
        "nl-server": "node nl-processing-server.js",
        "nl-dev": "nodemon nl-processing-server.js",
        "start-nl": "node nl-processing-server.js"
      },
      "dependencies": [
        "@elevenlabs/elevenlabs-js",
        "@google-cloud/firestore",
        "@google-cloud/secret-manager",
        "@pinecone-database/pinecone",
        "axios",
        "compression",
        "cors",
        "dotenv",
        "express",
        "express-rate-limit",
        "googleapis",
        "helmet",
        "jsonwebtoken",
        "mongodb",
        "newman",
        "node-cron",
        "node-fetch",
        "nodemon",
        "path-to-regexp",
        "uuid",
        "vector",
        "winston",
        "ws"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": true,
      "hasServerFile": true,
      "hasExpressDep": "^4.21.2",
      "keywords": [
        "asoos",
        "aixtiv",
        "symphony",
        "ai-agents",
        "cloudflare",
        "worker",
        "landing-page"
      ],
      "author": "AI Publishing International LLP",
      "license": "PROPRIETARY",
      "targetAudience": "General Business Users",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T05:47:38.051Z"
    },
    {
      "name": "integration-gateway-server",
      "version": "1.0.0",
      "description": "Integration Gateway Backend Server - Production Ready",
      "category": "ai-agents",
      "path": "",
      "fullPath": "/Users/as/asoos",
      "mainFile": "server.js",
      "scripts": {
        "build": "echo 'Building VLS Complete System'",
        "deploy": "bash deploy-vls-complete-system.sh",
        "deploy-local": "./scripts/deploy-local.sh",
        "test": "echo 'No tests specified' && exit 0",
        "start": "node -r ./utils/promiseHandler.js server.js",
        "start-safe": "node -r ./utils/promiseHandler.js index.js",
        "security": "node security-framework.js",
        "fix-promises": "node utils/promiseHandler.js",
        "init-agents": "node owner-interface/vls-computationalist-agents.js",
        "monitor-promises": "node scripts/monitor-promise-errors.js",
        "vls-deploy": "bash deploy-vls-complete-system.sh",
        "audit": "npm audit",
        "audit-fix": "npm audit fix",
        "security-check": "npm audit && npm run lint",
        "update-deps": "npm update && npm audit",
        "security-scan": "retire --js --path ./",
        "env-check": "dotenv-linter || echo \"dotenv-linter not installed\"",
        "nl-server": "node nl-processing-server.js",
        "nl-dev": "nodemon nl-processing-server.js",
        "start-nl": "node nl-processing-server.js"
      },
      "dependencies": [
        "@elevenlabs/elevenlabs-js",
        "@google-cloud/firestore",
        "@google-cloud/secret-manager",
        "@pinecone-database/pinecone",
        "axios",
        "compression",
        "cors",
        "dotenv",
        "express",
        "express-rate-limit",
        "googleapis",
        "helmet",
        "jsonwebtoken",
        "mongodb",
        "newman",
        "node-cron",
        "node-fetch",
        "nodemon",
        "path-to-regexp",
        "uuid",
        "vector",
        "winston",
        "ws"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": true,
      "hasServerFile": true,
      "hasExpressDep": "^4.21.2",
      "keywords": [
        "asoos",
        "aixtiv",
        "symphony",
        "ai-agents",
        "cloudflare",
        "worker",
        "landing-page"
      ],
      "author": "AI Publishing International LLP",
      "license": "PROPRIETARY",
      "targetAudience": "General Business Users",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T13:36:45.207Z"
    },
    {
      "name": "vision-lake-functions",
      "version": "1.0.0",
      "description": "Simulates VisionLake AI agent metrics",
      "category": "ai-agents",
      "path": "integration-gateway/.workspace/staging-extras/vls/vision_lake/functions",
      "fullPath": "/Users/as/asoos/integration-gateway/.workspace/staging-extras/vls/vision_lake/functions",
      "mainFile": "index.js",
      "scripts": {
        "test": "echo \"No test specified\" && exit 0",
        "deploy": "gcloud functions deploy agentPulsePanel --runtime nodejs20 --trigger-http --allow-unauthenticated --region=us-west1 --source=. --entry-point=agentPulseHandler",
        "deploy:mcp": "gcloud functions deploy agentPulsePanel --runtime nodejs20 --trigger-http --allow-unauthenticated --region=us-west1 --source=. --entry-point=agentPulseHandler --project=visionlake-core-mcp"
      },
      "dependencies": [
        "@aixtiv/bacasu-property",
        "@aixtiv/metaverse-venue",
        "@2100/timeline-view",
        "@2100/live-statistics",
        "@aixtiv/token-exchange",
        "@aixtiv/reward-marketplace",
        "@2100/social-pub-sdk",
        "@2100/nft-showcase",
        "@aixtiv/unified-wallet",
        "express",
        "@aixtiv/dr-cypriot-core",
        "@aixtiv/tower-blockchain",
        "@aixtiv/queen-mint-mark",
        "@google-cloud/functions-framework",
        "@aixtiv/diamond-sao",
        "@aixtiv/vision-lake-core",
        "@aixtiv/dr-claude-core",
        "@aixtiv/load-balancer",
        "@aixtiv/mocoa-core",
        "@aixtiv/mocorix2-core"
      ],
      "hasDockerfile": false,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.0",
      "keywords": [],
      "targetAudience": "General Business Users",
      "deploymentType": "Web Service",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-21T17:14:52.690Z"
    },
    {
      "name": "vision-lake-functions",
      "version": "1.0.0",
      "description": "Simulates VisionLake AI agent metrics",
      "category": "ai-agents",
      "path": ".workspace/staging-extras/vls/vision_lake/functions",
      "fullPath": "/Users/as/asoos/.workspace/staging-extras/vls/vision_lake/functions",
      "mainFile": "index.js",
      "scripts": {
        "test": "echo \"No test specified\" && exit 0",
        "deploy": "gcloud functions deploy agentPulsePanel --runtime nodejs20 --trigger-http --allow-unauthenticated --region=us-west1 --source=. --entry-point=agentPulseHandler",
        "deploy:mcp": "gcloud functions deploy agentPulsePanel --runtime nodejs20 --trigger-http --allow-unauthenticated --region=us-west1 --source=. --entry-point=agentPulseHandler --project=visionlake-core-mcp"
      },
      "dependencies": [
        "@aixtiv/bacasu-property",
        "@aixtiv/metaverse-venue",
        "@2100/timeline-view",
        "@2100/live-statistics",
        "@aixtiv/token-exchange",
        "@aixtiv/reward-marketplace",
        "@2100/social-pub-sdk",
        "@2100/nft-showcase",
        "@aixtiv/unified-wallet",
        "express",
        "@aixtiv/dr-cypriot-core",
        "@aixtiv/tower-blockchain",
        "@aixtiv/queen-mint-mark",
        "@google-cloud/functions-framework",
        "@aixtiv/diamond-sao",
        "@aixtiv/vision-lake-core",
        "@aixtiv/dr-claude-core",
        "@aixtiv/load-balancer",
        "@aixtiv/mocoa-core",
        "@aixtiv/mocorix2-core"
      ],
      "hasDockerfile": false,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.0",
      "keywords": [],
      "targetAudience": "General Business Users",
      "deploymentType": "Web Service",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-21T14:25:36.194Z"
    },
    {
      "name": "warp-drive-functions",
      "version": "2.0.0",
      "description": "DIAMOND CLI Owner-Subscriber V2 - Google Cloud Functions",
      "category": "development-tools",
      "path": "Aixtiv-Symphony/functions",
      "fullPath": "/Users/as/asoos/Aixtiv-Symphony/functions",
      "mainFile": "index.js",
      "scripts": {
        "start": "functions-framework --target=index",
        "dev": "functions-framework --target=index --port=8080 --source=.",
        "deploy": "gcloud functions deploy warp-drive-functions --gen2 --runtime=nodejs24 --region=us-west1 --source=. --entry-point=index --trigger-http --allow-unauthenticated --memory=1GB --timeout=300s --max-instances=100",
        "deploy:staging": "gcloud functions deploy warp-drive-functions-staging --gen2 --runtime=nodejs24 --region=us-west1-b --source=. --entry-point=index --trigger-http --allow-unauthenticated --memory=1GB --timeout=300s --max-instances=50",
        "test": "npm run test:unit",
        "test:unit": "jest --testPathPattern=test/",
        "lint": "eslint *.js",
        "lint:fix": "eslint *.js --fix"
      },
      "dependencies": [
        "@google-cloud/functions-framework",
        "@google-cloud/firestore",
        "@google-cloud/logging",
        "@google-cloud/secret-manager",
        "@pinecone-database/pinecone",
        "cors",
        "express",
        "uuid"
      ],
      "hasDockerfile": false,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.21.2",
      "keywords": [
        "google-cloud-functions",
        "aixtiv-symphony",
        "diamond-cli",
        "firestore",
        "pinecone",
        "mcp",
        "model-context-protocol"
      ],
      "author": "AI Publishing International LLP",
      "license": "MIT",
      "targetAudience": "Diamond SAO",
      "deploymentType": "Web Service",
      "saOTier": "Diamond SAO",
      "lastModified": "2025-09-23T05:28:46.370Z"
    },
    {
      "name": "api-tertiary",
      "version": "1.0.0",
      "description": "Tertiary API service for CTTT high-speed deployment pipeline",
      "category": "integration-hub",
      "path": "integration-gateway/services/api-tertiary",
      "fullPath": "/Users/as/asoos/integration-gateway/services/api-tertiary",
      "mainFile": "index.js",
      "scripts": {
        "start": "node index.js",
        "dev": "nodemon index.js",
        "test": "jest",
        "docker:build": "docker build -t api-tertiary .",
        "docker:run": "docker run -p 8080:8080 api-tertiary"
      },
      "dependencies": ["express", "cors", "winston"],
      "hasDockerfile": true,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.2",
      "keywords": [
        "api",
        "tertiary",
        "cttt",
        "high-speed",
        "deployment",
        "cloud-run",
        "health-check",
        "load-balancing"
      ],
      "author": "AI Publishing International LLP",
      "license": "MIT",
      "targetAudience": "General Business Users",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-22T23:18:00.456Z"
    },
    {
      "name": "api-tertiary",
      "version": "1.0.0",
      "description": "Tertiary API service for CTTT high-speed deployment pipeline",
      "category": "integration-hub",
      "path": "services/api-tertiary",
      "fullPath": "/Users/as/asoos/services/api-tertiary",
      "mainFile": "index.js",
      "scripts": {
        "start": "node index.js",
        "dev": "nodemon index.js",
        "test": "jest",
        "docker:build": "docker build -t api-tertiary .",
        "docker:run": "docker run -p 8080:8080 api-tertiary"
      },
      "dependencies": ["express", "cors", "winston"],
      "hasDockerfile": true,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.2",
      "keywords": [
        "api",
        "tertiary",
        "cttt",
        "high-speed",
        "deployment",
        "cloud-run",
        "health-check",
        "load-balancing"
      ],
      "author": "AI Publishing International LLP",
      "license": "MIT",
      "targetAudience": "General Business Users",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T07:59:08.478Z"
    },
    {
      "name": "asoos-owner-interface-latest",
      "version": "3.0.0",
      "description": "Latest ASOOS Owner Interface - Testament Swarm Connected V99",
      "category": "owner-interface",
      "path": "deploy-package",
      "fullPath": "/Users/as/asoos/deploy-package",
      "mainFile": "server.js",
      "scripts": {
        "start": "node server.js",
        "dev": "node server.js",
        "build": "echo 'Latest ASOOS Build Complete'"
      },
      "dependencies": ["express", "path"],
      "hasDockerfile": false,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.2",
      "keywords": ["asoos", "owner-interface", "testament-swarm", "v99"],
      "author": "Diamond SAO Command Center",
      "license": "ISC",
      "targetAudience": "General Business Users",
      "deploymentType": "Web Service",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-20T15:57:41.324Z"
    },
    {
      "name": "asoos-owner-interface-latest",
      "version": "3.0.0",
      "description": "Latest ASOOS Owner Interface - Testament Swarm Connected V99",
      "category": "owner-interface",
      "path": "integration-gateway/deploy-package",
      "fullPath": "/Users/as/asoos/integration-gateway/deploy-package",
      "mainFile": "server.js",
      "scripts": {
        "start": "node server.js",
        "dev": "node server.js",
        "build": "echo 'Latest ASOOS Build Complete'"
      },
      "dependencies": ["express", "path"],
      "hasDockerfile": false,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.2",
      "keywords": ["asoos", "owner-interface", "testament-swarm", "v99"],
      "author": "Diamond SAO Command Center",
      "license": "ISC",
      "targetAudience": "General Business Users",
      "deploymentType": "Web Service",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-21T17:14:52.991Z"
    },
    {
      "name": "mocoa-interface",
      "version": "2.4.7",
      "description": "MOCOA Enterprise Interface with Dr. Claude Quantum Orchestration and Victory36 Protection",
      "category": "owner-interface",
      "path": "integration-gateway/mocoa-cloud-run",
      "fullPath": "/Users/as/asoos/integration-gateway/mocoa-cloud-run",
      "mainFile": "server.js",
      "scripts": {
        "start": "node server.js",
        "dev": "nodemon server.js",
        "victory36-scan": "node victory36-security-scan.js",
        "quantum-health": "curl -f http://localhost:8080/api/dr-claude/health"
      },
      "dependencies": ["express", "http-proxy-middleware"],
      "hasDockerfile": true,
      "hasCloudBuild": true,
      "hasServerFile": true,
      "hasExpressDep": "^4.21.2",
      "keywords": [
        "asoos",
        "mocoa",
        "pcp",
        "interface",
        "wfa-swarm",
        "quantum-orchestration",
        "dr-claude",
        "victory36",
        "enterprise"
      ],
      "author": "ASOOS WFA Swarm Team",
      "license": "Enterprise",
      "targetAudience": "Enterprise Clients",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-22T23:18:00.452Z"
    },
    {
      "name": "mocoa-interface",
      "version": "2.4.7",
      "description": "MOCOA Enterprise Interface with Dr. Claude Quantum Orchestration and Victory36 Protection",
      "category": "owner-interface",
      "path": "mocoa-cloud-run",
      "fullPath": "/Users/as/asoos/mocoa-cloud-run",
      "mainFile": "server.js",
      "scripts": {
        "start": "node server.js",
        "dev": "nodemon server.js",
        "victory36-scan": "node victory36-security-scan.js",
        "quantum-health": "curl -f http://localhost:8080/api/dr-claude/health"
      },
      "dependencies": ["express", "http-proxy-middleware"],
      "hasDockerfile": true,
      "hasCloudBuild": true,
      "hasServerFile": true,
      "hasExpressDep": "^4.21.2",
      "keywords": [
        "asoos",
        "mocoa",
        "pcp",
        "interface",
        "wfa-swarm",
        "quantum-orchestration",
        "dr-claude",
        "victory36",
        "enterprise"
      ],
      "author": "ASOOS WFA Swarm Team",
      "license": "Enterprise",
      "targetAudience": "Enterprise Clients",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T07:59:08.476Z"
    },
    {
      "name": "mocoa-owner-interface-fixed",
      "version": "1.0.2",
      "description": "MOCOA Owner Interface with GCP Secret Manager integration",
      "category": "owner-interface",
      "path": "integration-gateway/vls/synthesis-core/interface-synthesis/owner-interface",
      "fullPath": "/Users/as/asoos/integration-gateway/vls/synthesis-core/interface-synthesis/owner-interface",
      "mainFile": "server-minimal.js",
      "scripts": {
        "start": "node server-minimal.js",
        "dev": "nodemon server.js",
        "oauth2-server": "node oauth2-elevenlabs-server.js",
        "oauth2-dev": "NODE_ENV=development nodemon oauth2-elevenlabs-server.js",
        "oauth2-prod": "NODE_ENV=production node oauth2-elevenlabs-server.js",
        "test": "echo \"Error: no test specified\" && exit 1",
        "test-oauth2": "node test/oauth2-client-test.js",
        "test-auth-flow": "node test/auth-flow-test.js",
        "build": "echo \"No build step required\"",
        "deploy": "gcloud builds submit --config=cloudbuild.yaml .",
        "deploy-local": "docker build -t mocoa-owner-interface . && docker run -p 3000:3000 mocoa-owner-interface",
        "init-agents": "node elevenlabs-conversational-agents.js",
        "test-agents": "node test-agents.js"
      },
      "dependencies": [
        "@elevenlabs/elevenlabs-js",
        "@google-cloud/pubsub",
        "@google-cloud/secret-manager",
        "cookie-parser",
        "cors",
        "dotenv",
        "elevenlabs",
        "express",
        "googleapis",
        "helmet",
        "jsonwebtoken",
        "multer",
        "node-fetch",
        "uuid",
        "ws"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": true,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.2",
      "keywords": ["mocoa", "ai", "interface", "gcp", "secret-manager", "elevenlabs", "tts"],
      "author": "ASOOS",
      "license": "MIT",
      "targetAudience": "General Business Users",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T03:33:03.354Z"
    },
    {
      "name": "mocoa-owner-interface-fixed",
      "version": "1.0.2",
      "description": "MOCOA Owner Interface with GCP Secret Manager integration",
      "category": "owner-interface",
      "path": "integration-gateway/owner-interface",
      "fullPath": "/Users/as/asoos/integration-gateway/owner-interface",
      "mainFile": "server-minimal.js",
      "scripts": {
        "start": "node server-minimal.js",
        "dev": "nodemon server.js",
        "oauth2-server": "node oauth2-elevenlabs-server.js",
        "oauth2-dev": "NODE_ENV=development nodemon oauth2-elevenlabs-server.js",
        "oauth2-prod": "NODE_ENV=production node oauth2-elevenlabs-server.js",
        "test": "echo \"Error: no test specified\" && exit 1",
        "test-oauth2": "node test/oauth2-client-test.js",
        "test-auth-flow": "node test/auth-flow-test.js",
        "build": "echo \"No build step required\"",
        "deploy": "gcloud builds submit --config=cloudbuild.yaml .",
        "deploy-local": "docker build -t mocoa-owner-interface . && docker run -p 3000:3000 mocoa-owner-interface",
        "init-agents": "node elevenlabs-conversational-agents.js",
        "test-agents": "node test-agents.js"
      },
      "dependencies": [
        "@elevenlabs/elevenlabs-js",
        "@google-cloud/pubsub",
        "@google-cloud/secret-manager",
        "cookie-parser",
        "cors",
        "dotenv",
        "elevenlabs",
        "express",
        "googleapis",
        "helmet",
        "jsonwebtoken",
        "multer",
        "node-fetch",
        "uuid",
        "ws"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": true,
      "hasServerFile": true,
      "hasExpressDep": "^4.21.2",
      "keywords": ["mocoa", "ai", "interface", "gcp", "secret-manager", "elevenlabs", "tts"],
      "author": "ASOOS",
      "license": "MIT",
      "targetAudience": "General Business Users",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-22T23:18:00.453Z"
    },
    {
      "name": "mocoa-owner-interface-fixed",
      "version": "1.0.2",
      "description": "MOCOA Owner Interface with GCP Secret Manager integration",
      "category": "owner-interface",
      "path": "vls/synthesis-core/interface-synthesis/owner-interface",
      "fullPath": "/Users/as/asoos/vls/synthesis-core/interface-synthesis/owner-interface",
      "mainFile": "server-minimal.js",
      "scripts": {
        "start": "node server-minimal.js",
        "dev": "nodemon server.js",
        "oauth2-server": "node oauth2-elevenlabs-server.js",
        "oauth2-dev": "NODE_ENV=development nodemon oauth2-elevenlabs-server.js",
        "oauth2-prod": "NODE_ENV=production node oauth2-elevenlabs-server.js",
        "test": "echo \"Error: no test specified\" && exit 1",
        "test-oauth2": "node test/oauth2-client-test.js",
        "test-auth-flow": "node test/auth-flow-test.js",
        "build": "echo \"No build step required\"",
        "deploy": "gcloud builds submit --config=cloudbuild.yaml .",
        "deploy-local": "docker build -t mocoa-owner-interface . && docker run -p 3000:3000 mocoa-owner-interface",
        "init-agents": "node elevenlabs-conversational-agents.js",
        "test-agents": "node test-agents.js"
      },
      "dependencies": [
        "@elevenlabs/elevenlabs-js",
        "@google-cloud/pubsub",
        "@google-cloud/secret-manager",
        "cookie-parser",
        "cors",
        "dotenv",
        "elevenlabs",
        "express",
        "googleapis",
        "helmet",
        "jsonwebtoken",
        "multer",
        "node-fetch",
        "uuid",
        "ws"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": true,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.2",
      "keywords": ["mocoa", "ai", "interface", "gcp", "secret-manager", "elevenlabs", "tts"],
      "author": "ASOOS",
      "license": "MIT",
      "targetAudience": "General Business Users",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T07:59:08.479Z"
    },
    {
      "name": "mocoa-owner-interface-fixed",
      "version": "1.0.2",
      "description": "MOCOA Owner Interface with GCP Secret Manager integration",
      "category": "owner-interface",
      "path": "owner-interface",
      "fullPath": "/Users/as/asoos/owner-interface",
      "mainFile": "server-minimal.js",
      "scripts": {
        "start": "node server-minimal.js",
        "dev": "nodemon server.js",
        "oauth2-server": "node oauth2-elevenlabs-server.js",
        "oauth2-dev": "NODE_ENV=development nodemon oauth2-elevenlabs-server.js",
        "oauth2-prod": "NODE_ENV=production node oauth2-elevenlabs-server.js",
        "test": "echo \"Error: no test specified\" && exit 1",
        "test-oauth2": "node test/oauth2-client-test.js",
        "test-auth-flow": "node test/auth-flow-test.js",
        "build": "echo \"No build step required\"",
        "deploy": "gcloud builds submit --config=cloudbuild.yaml .",
        "deploy-local": "docker build -t mocoa-owner-interface . && docker run -p 3000:3000 mocoa-owner-interface",
        "init-agents": "node elevenlabs-conversational-agents.js",
        "test-agents": "node test-agents.js"
      },
      "dependencies": [
        "@elevenlabs/elevenlabs-js",
        "@google-cloud/pubsub",
        "@google-cloud/secret-manager",
        "cookie-parser",
        "cors",
        "dotenv",
        "elevenlabs",
        "express",
        "googleapis",
        "helmet",
        "jsonwebtoken",
        "multer",
        "node-fetch",
        "uuid",
        "ws"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": true,
      "hasServerFile": true,
      "hasExpressDep": "^4.21.2",
      "keywords": ["mocoa", "ai", "interface", "gcp", "secret-manager", "elevenlabs", "tts"],
      "author": "ASOOS",
      "license": "MIT",
      "targetAudience": "General Business Users",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T07:59:08.476Z"
    },
    {
      "name": "integration-gateway",
      "version": "1.0.0",
      "category": "security-gateway",
      "path": "integration-gateway/deploy-clean",
      "fullPath": "/Users/as/asoos/integration-gateway/deploy-clean",
      "mainFile": "server-cloud.js",
      "scripts": {
        "start": "node server-cloud.js",
        "dev": "node server-cloud.js",
        "build": "echo 'Build complete - using Node.js source directly'"
      },
      "dependencies": [
        "@google-cloud/functions-framework",
        "@google-cloud/secret-manager",
        "apify-client",
        "axios",
        "body-parser",
        "cheerio",
        "cors",
        "dotenv",
        "express",
        "express-rate-limit",
        "helmet",
        "joi",
        "jsonwebtoken",
        "lodash",
        "morgan",
        "node-cron",
        "playwright",
        "puppeteer",
        "rate-limiter-flexible",
        "uuid",
        "winston"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.2",
      "keywords": [],
      "targetAudience": "General Business Users",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-22T23:18:00.451Z"
    },
    {
      "name": "integration-gateway",
      "version": "1.0.0",
      "category": "security-gateway",
      "path": "deploy-clean",
      "fullPath": "/Users/as/asoos/deploy-clean",
      "mainFile": "server-cloud.js",
      "scripts": {
        "start": "node server-cloud.js",
        "dev": "node server-cloud.js",
        "build": "echo 'Build complete - using Node.js source directly'"
      },
      "dependencies": [
        "@google-cloud/functions-framework",
        "@google-cloud/secret-manager",
        "apify-client",
        "axios",
        "body-parser",
        "cheerio",
        "cors",
        "dotenv",
        "express",
        "express-rate-limit",
        "helmet",
        "joi",
        "jsonwebtoken",
        "lodash",
        "morgan",
        "node-cron",
        "playwright",
        "puppeteer",
        "rate-limiter-flexible",
        "uuid",
        "winston"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": false,
      "hasServerFile": true,
      "hasExpressDep": "^4.18.2",
      "keywords": [],
      "targetAudience": "General Business Users",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T07:59:08.475Z"
    },
    {
      "name": "oauth2-cli",
      "version": "1.0.0",
      "description": "A simple OAuth2 CLI tool for Google service accounts",
      "category": "security-gateway",
      "path": "integration-gateway/oauth2-cli",
      "fullPath": "/Users/as/asoos/integration-gateway/oauth2-cli",
      "mainFile": "oauth2-cli.js",
      "scripts": {},
      "dependencies": ["googleapis", "google-auth-library"],
      "hasDockerfile": false,
      "hasCloudBuild": false,
      "hasServerFile": false,
      "hasCLI": {
        "oauth2": "./oauth2-cli.js"
      },
      "keywords": [],
      "targetAudience": "Developers/DevOps",
      "deploymentType": "CLI Tool",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-22T23:18:00.452Z"
    },
    {
      "name": "oauth2-cli",
      "version": "1.0.0",
      "description": "A simple OAuth2 CLI tool for Google service accounts",
      "category": "security-gateway",
      "path": "oauth2-cli",
      "fullPath": "/Users/as/asoos/oauth2-cli",
      "mainFile": "oauth2-cli.js",
      "scripts": {},
      "dependencies": ["googleapis", "google-auth-library"],
      "hasDockerfile": false,
      "hasCloudBuild": false,
      "hasServerFile": false,
      "hasCLI": {
        "oauth2": "./oauth2-cli.js"
      },
      "keywords": [],
      "targetAudience": "Developers/DevOps",
      "deploymentType": "CLI Tool",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-23T07:59:08.476Z"
    },
    {
      "name": "vls-synthesis-core",
      "version": "1.0.0-synthesis-foundation",
      "description": "VLS Master Synthesis Architecture - Unified Voice Language Synthesis System",
      "category": "voice-synthesis",
      "path": "integration-gateway/vls/synthesis-core",
      "fullPath": "/Users/as/asoos/integration-gateway/vls/synthesis-core",
      "mainFile": "vls-master-synthesis.js",
      "scripts": {
        "start": "node vls-master-synthesis.js",
        "dev": "node --inspect vls-master-synthesis.js",
        "test": "node --test",
        "synthesis-voice": "node voice-synthesis/unified-elevenlabs-system.js",
        "synthesis-agent": "node agent-synthesis/srix-agent-orchestrator.js",
        "synthesis-interface": "node interface-synthesis/interface-manager.js",
        "synthesis-integration": "node integration-synthesis/gateway-hub.js",
        "synthesis-promise": "curl -s https://mocoa-us-west1-b-yutylytffa-uw.a.run.app/health | jq",
        "deploy-synthesis": "./scripts/deploy-vls-synthesis.sh",
        "test-synthesis": "./scripts/test-vls-integration.sh"
      },
      "dependencies": [
        "axios",
        "winston",
        "@google-cloud/secret-manager",
        "elevenlabs",
        "express",
        "cors",
        "helmet",
        "ws",
        "jsonwebtoken",
        "multer",
        "dotenv"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": false,
      "hasServerFile": false,
      "hasExpressDep": "^4.21.1",
      "keywords": [
        "vls",
        "synthesis",
        "voice",
        "agents",
        "interface",
        "integration",
        "promise",
        "diamond-sao",
        "elevenlabs",
        "supreme-promise-infrastructure"
      ],
      "author": "Diamond SAO + VLS Synthesis Team",
      "license": "PROPRIETARY",
      "targetAudience": "Diamond SAO",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-22T22:59:28.732Z"
    },
    {
      "name": "vls-synthesis-core",
      "version": "1.0.0-synthesis-foundation",
      "description": "VLS Master Synthesis Architecture - Unified Voice Language Synthesis System",
      "category": "voice-synthesis",
      "path": "vls/synthesis-core",
      "fullPath": "/Users/as/asoos/vls/synthesis-core",
      "mainFile": "vls-master-synthesis.js",
      "scripts": {
        "start": "node vls-master-synthesis.js",
        "dev": "node --inspect vls-master-synthesis.js",
        "test": "node --test",
        "synthesis-voice": "node voice-synthesis/unified-elevenlabs-system.js",
        "synthesis-agent": "node agent-synthesis/srix-agent-orchestrator.js",
        "synthesis-interface": "node interface-synthesis/interface-manager.js",
        "synthesis-integration": "node integration-synthesis/gateway-hub.js",
        "synthesis-promise": "curl -s https://mocoa-us-west1-b-yutylytffa-uw.a.run.app/health | jq",
        "deploy-synthesis": "./scripts/deploy-vls-synthesis.sh",
        "test-synthesis": "./scripts/test-vls-integration.sh"
      },
      "dependencies": [
        "axios",
        "winston",
        "@google-cloud/secret-manager",
        "elevenlabs",
        "express",
        "cors",
        "helmet",
        "ws",
        "jsonwebtoken",
        "multer",
        "dotenv"
      ],
      "hasDockerfile": true,
      "hasCloudBuild": false,
      "hasServerFile": false,
      "hasExpressDep": "^4.21.1",
      "keywords": [
        "vls",
        "synthesis",
        "voice",
        "agents",
        "interface",
        "integration",
        "promise",
        "diamond-sao",
        "elevenlabs",
        "supreme-promise-infrastructure"
      ],
      "author": "Diamond SAO + VLS Synthesis Team",
      "license": "PROPRIETARY",
      "targetAudience": "Diamond SAO",
      "deploymentType": "Google Cloud Run",
      "saOTier": "Standard Access",
      "lastModified": "2025-09-22T18:41:55.755Z"
    }
  ]
}
