name: Update Monitoring Scripts

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  update-monitoring:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r monitoring/requirements.txt
          
      - name: Update Monitoring Scripts
        run: |
          # Copy the fixed monitoring script
          cp monitoring/service_monitor_fixed.py monitoring/service_monitor.py
          
          # Check the script syntax
          python -m py_compile monitoring/service_monitor.py
          
          # Create a GitHub commit
          git config --local user.email "dr-lucy-automation@coaching2100.com"
          git config --local user.name "Dr. Lucy Automation"
          git add monitoring/service_monitor.py
          git commit -m "fix: Update monitoring script with improved error handling and fault tolerance"
          git push
          
      - name: Apply Changes to Other Repositories
        run: |
          # List of repositories to update
          REPOS=(
            "AI-Publishing-International-LLP-UK/asoos"
            "C2100-PR/aixtiv-symphony-opus1"
            "C2100-PR/code-gold-standards"
            "C2100-PR/content-management-system" 
            "C2100-PR/c2100-PR"
          )
          
          # Clone, update, and push to each repository
          for repo in "${REPOS[@]}"; do
            echo "Updating $repo..."
            
            # Clone repo to a temporary directory
            REPO_DIR="temp_repo_$(echo $repo | tr '/' '_')"
            git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$repo.git" "$REPO_DIR"
            
            # Check if monitoring directory exists, create if not
            if [ ! -d "$REPO_DIR/monitoring" ]; then
              mkdir -p "$REPO_DIR/monitoring"
            fi
            
            # Copy monitoring files
            cp monitoring/service_monitor_fixed.py "$REPO_DIR/monitoring/service_monitor.py"
            cp monitoring/requirements.txt "$REPO_DIR/monitoring/requirements.txt"
            
            # Commit and push changes
            cd "$REPO_DIR"
            git config user.email "dr-lucy-automation@coaching2100.com"
            git config user.name "Dr. Lucy Automation"
            git add monitoring/
            
            # Only commit if there are changes
            if ! git diff --staged --quiet; then
              git commit -m "fix: Update monitoring script with improved error handling and fault tolerance"
              git push || echo "Failed to push to $repo"
            else
              echo "No changes in $repo"
            fi
            
            cd ..
            rm -rf "$REPO_DIR"
          done
          
      - name: Update CI/CD Workflows
        run: |
          for repo in "${REPOS[@]}"; do
            echo "Updating workflows in $repo..."
            
            # Clone repo
            REPO_DIR="temp_workflow_$(echo $repo | tr '/' '_')"
            git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$repo.git" "$REPO_DIR"
            
            # Check if workflows directory exists
            if [ ! -d "$REPO_DIR/.github/workflows" ]; then
              echo "No workflows directory in $repo"
              rm -rf "$REPO_DIR"
              continue
            fi
            
            # Update authentication in all workflow files
            cd "$REPO_DIR"
            for workflow in .github/workflows/*.yml; do
              # Check if file contains Google Cloud authentication that needs fixing
              if grep -q "google-github-actions/auth" "$workflow" && ! grep -q "credentials_json" "$workflow"; then
                echo "Fixing authentication in $workflow..."
                
                # Create a backup
                cp "$workflow" "${workflow}.bak"
                
                # Replace the authentication block with MCP pattern
                sed -i.tmp '/Authenticate to Google Cloud/,/workload_identity_provider/ c\
      - name: Authenticate to Google Cloud\
        uses: google-github-actions/auth@v1\
        with:\
          credentials_json: ${{ secrets.GCP_SA_KEY }}' "$workflow"
                
                rm -f "${workflow}.tmp"
              fi
            done
            
            # Commit and push changes
            git config user.email "dr-lucy-automation@coaching2100.com"
            git config user.name "Dr. Lucy Automation"
            git add .github/workflows/
            
            # Only commit if there are changes
            if ! git diff --staged --quiet; then
              git commit -m "fix: Update workflows with consistent Google Cloud authentication pattern"
              git push || echo "Failed to push to $repo"
            else
              echo "No workflow changes in $repo"
            fi
            
            cd ..
            rm -rf "$REPO_DIR"
          done
          
      - name: Update Status
        run: |
          echo "### Monitoring Scripts Updated âœ…" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Successfully updated service monitoring scripts with:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Improved error handling" >> $GITHUB_STEP_SUMMARY
          echo "- Retry logic for API calls" >> $GITHUB_STEP_SUMMARY
          echo "- Fallback mechanisms to prevent workflow failures" >> $GITHUB_STEP_SUMMARY
          echo "- Consistent authentication patterns across all workflows" >> $GITHUB_STEP_SUMMARY