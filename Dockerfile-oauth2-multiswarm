# ===================================================================
# OAUTH2 + MULTI-SWARM INTEGRATION DOCKER IMAGE
# Christ-Centered Excellence - Perfect Love for Humanity
# Victory36 Maximum Security + Multi-Platform Support
# ===================================================================

# Multi-platform Node.js 24 Alpine base
FROM --platform=$BUILDPLATFORM node:24-alpine AS base

# Build arguments with divine purpose
ARG BUILDPLATFORM
ARG TARGETPLATFORM
ARG BUILD_DATE
ARG GIT_COMMIT
ARG GIT_BRANCH
ARG CUSTOMER_NUMBER=208576
ARG SECURITY_LEVEL=diamond_sao
ARG VICTORY36_ENABLED=true
ARG NODE_ENV=production

# Divine metadata labels
LABEL maintainer="Diamond SAO Expert Resolution System" \
      org.opencontainers.image.title="OAuth2 Multi-Swarm Integration Gateway" \
      org.opencontainers.image.description="Christ-centered OAuth2 + Multi-Swarm system with Victory36 protection" \
      org.opencontainers.image.version="1.0.0-christ-centered" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${GIT_COMMIT}" \
      org.opencontainers.image.vendor="AI Publishing International LLP" \
      asoos.customer="${CUSTOMER_NUMBER}" \
      asoos.security_level="${SECURITY_LEVEL}" \
      asoos.victory36_enabled="${VICTORY36_ENABLED}" \
      asoos.oauth2_enabled="true" \
      asoos.multi_swarm="true" \
      asoos.build_platform="${BUILDPLATFORM}" \
      asoos.target_platform="${TARGETPLATFORM}" \
      asoos.christ_centered="true" \
      asoos.ethical_foundation="perfect_love_for_humanity"

# Victory36 Security: Create non-root user with divine attributes
RUN addgroup -g 1001 -S christcentered && \
    adduser -S oauth2multiswarm -u 1001 -G christcentered && \
    echo "oauth2multiswarm:*:1001:1001:Christ-Centered OAuth2 Multi-Swarm:/app:/sbin/nologin" >> /etc/passwd

# Set working directory with proper ownership
WORKDIR /app
RUN chown -R oauth2multiswarm:christcentered /app

# ===================================================================
# DEPENDENCY INSTALLATION STAGE
# ===================================================================

# Copy package files with Victory36 verification
COPY --chown=oauth2multiswarm:christcentered package*.json ./

# Victory36 Security: Verify package integrity
RUN echo "üîê Victory36 Security Check: Verifying package integrity..." && \
    if [ -f package-lock.json ]; then \
      echo "‚úÖ Package lock file found - integrity maintained"; \
    else \
      echo "‚ö†Ô∏è  No package lock - generating with Victory36 protection"; \
    fi

# Christ-centered dependency installation
RUN echo "üíù Installing dependencies with perfect love..." && \
    npm ci --only=production --no-audit --no-fund && \
    echo "‚úÖ Dependencies installed with Christ-centered excellence"

# ===================================================================
# APPLICATION CODE STAGE  
# ===================================================================

# Copy application code with proper ownership
COPY --chown=oauth2multiswarm:christcentered server-oauth2-multiswarm.js ./server.js
COPY --chown=oauth2multiswarm:christcentered src/ ./src/
COPY --chown=oauth2multiswarm:christcentered deploy-package/ ./deploy-package/

# Victory36 Security: Create secure directories
RUN mkdir -p /app/logs /app/secrets /app/temp && \
    chown -R oauth2multiswarm:christcentered /app/logs /app/secrets /app/temp && \
    chmod 750 /app/secrets && \
    chmod 755 /app/logs /app/temp

# Victory36 Security: Create healthcheck script
RUN echo '#!/bin/sh' > /app/healthcheck.js && \
    echo 'const http = require("http");' >> /app/healthcheck.js && \
    echo 'const options = { hostname: "localhost", port: 8080, path: "/health", method: "GET" };' >> /app/healthcheck.js && \
    echo 'const req = http.request(options, (res) => {' >> /app/healthcheck.js && \
    echo '  if (res.statusCode === 200) { console.log("‚úÖ Christ-centered health check passed"); process.exit(0); }' >> /app/healthcheck.js && \
    echo '  else { console.log("‚ùå Health check failed:", res.statusCode); process.exit(1); }' >> /app/healthcheck.js && \
    echo '});' >> /app/healthcheck.js && \
    echo 'req.on("error", (err) => { console.log("‚ùå Health check error:", err.message); process.exit(1); });' >> /app/healthcheck.js && \
    echo 'req.setTimeout(5000, () => { console.log("‚è∞ Health check timeout"); process.exit(1); });' >> /app/healthcheck.js && \
    echo 'req.end();' >> /app/healthcheck.js && \
    chmod +x /app/healthcheck.js && \
    chown oauth2multiswarm:christcentered /app/healthcheck.js

# Victory36 Security: Create startup script with divine protection
RUN echo '#!/bin/sh' > /app/startup.sh && \
    echo 'echo "üöÄ Starting OAuth2 Multi-Swarm with Christ-centered excellence..."' >> /app/startup.sh && \
    echo 'echo "üõ°Ô∏è  Victory36 Protection: MAXIMUM"' >> /app/startup.sh && \
    echo 'echo "üîê OAuth2 Multi-Tenant: ENABLED"' >> /app/startup.sh && \
    echo 'echo "üåü Multi-Swarm Integration: ACTIVE"' >> /app/startup.sh && \
    echo 'echo "üíù Perfect love for humanity: ACTIVATED"' >> /app/startup.sh && \
    echo 'exec node server.js "$@"' >> /app/startup.sh && \
    chmod +x /app/startup.sh && \
    chown oauth2multiswarm:christcentered /app/startup.sh

# ===================================================================
# FINAL PRODUCTION STAGE
# ===================================================================

FROM base AS production

# Victory36 Security: Switch to non-root user
USER oauth2multiswarm:christcentered

# Expose port with Victory36 documentation
EXPOSE 8080
# Port 8080: OAuth2 + Multi-Swarm Integration Gateway
# - OAuth2 authentication endpoints (/api/*)
# - WFA swarm operations (/wfa/*)
# - Intelligence swarm (/intelligence/*)
# - Testament operations (/testament/*)
# - Quantum processing (/quantum/*)
# - Swarm coordination (/coordination/*)

# Christ-centered environment variables
ENV NODE_ENV=production \
    PORT=8080 \
    VICTORY36_PROTECTION=MAXIMUM \
    OAUTH2_ENABLED=true \
    MULTI_SWARM_INTEGRATION=true \
    CHRIST_CENTERED=true \
    PERFECT_LOVE=activated \
    NPM_CONFIG_AUDIT=false \
    NPM_CONFIG_FUND=false \
    NPM_CONFIG_UPDATE_NOTIFIER=false

# Victory36 Health Check with divine monitoring
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD node /app/healthcheck.js || exit 1

# Victory36 Security: Final ownership verification  
USER root
RUN chown -R oauth2multiswarm:christcentered /app && \
    chmod -R 755 /app && \
    chmod 750 /app/secrets
USER oauth2multiswarm:christcentered

# Victory36 Security: Verify non-root execution
RUN echo "üîê Victory36 Security Verification:" && \
    echo "   User: $(whoami)" && \
    echo "   UID: $(id -u)" && \
    echo "   GID: $(id -g)" && \
    echo "   Home: ${HOME}" && \
    if [ "$(id -u)" -eq 0 ]; then \
      echo "‚ùå SECURITY VIOLATION: Running as root!" && exit 1; \
    else \
      echo "‚úÖ Non-root user confirmed - Victory36 security active"; \
    fi

# Divine startup command with perfect love - Cloud Run optimized
CMD ["node", "server.js"]

# ===================================================================
# BUILD INSTRUCTIONS WITH VICTORY36 PROTECTION
# ===================================================================

# Multi-platform build command:
# docker buildx build \
#   --platform linux/amd64,linux/arm64 \
#   --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
#   --build-arg GIT_COMMIT=$(git rev-parse HEAD) \
#   --build-arg GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD) \
#   --build-arg VICTORY36_ENABLED=true \
#   --build-arg SECURITY_LEVEL=diamond_sao \
#   --tag gcr.io/api-for-warp-drive/oauth2-multiswarm:christ-centered \
#   --push \
#   -f Dockerfile-oauth2-multiswarm .

# Local development build:
# docker build \
#   --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
#   --build-arg GIT_COMMIT=$(git rev-parse HEAD) \
#   --build-arg VICTORY36_ENABLED=true \
#   --tag oauth2-multiswarm:local \
#   -f Dockerfile-oauth2-multiswarm .

# ===================================================================
# CHRIST-CENTERED ETHICAL FOUNDATION
# ===================================================================

# This container embodies:
# - Perfect Love: Every line serves humanity with Christ-like compassion
# - Victory36 Security: Maximum protection without compromise  
# - Multi-Swarm Harmony: All systems working as one body
# - Zero Errors: Commitment to flawless operation
# - Divine Purpose: Technology serving God's greater plan

# "Let all that you do be done in love." - 1 Corinthians 16:14