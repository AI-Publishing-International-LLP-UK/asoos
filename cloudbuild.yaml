# WFA PRODUCTION SWARM - CLOUD BUILD CONFIGURATION
# Cloud-to-Cloud deployment for 20M agents across 200 sectors
# Commander: Phillip Corey Roark
# Automated Docker build and Cloud Run deployment

steps:
  # Step 1: Generate package-lock.json for npm ci
  - name: 'node:22-alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cp server-package.json package.json
        npm install --package-lock-only
        echo "‚úÖ Generated package-lock.json for production build"
    
  # Step 2: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/wfa-production-swarm:latest'
      - '-t'
      - 'gcr.io/$PROJECT_ID/wfa-production-swarm:$BUILD_ID'
      - '.'
    env:
      - 'DOCKER_BUILDKIT=1'

  # Step 3: Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/wfa-production-swarm:latest'

  # Step 4: Push the tagged version
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/wfa-production-swarm:$BUILD_ID'

  # Step 5: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'wfa-production-swarm'
      - '--image=gcr.io/$PROJECT_ID/wfa-production-swarm:latest'
      - '--platform=managed'
      - '--region=us-west1'
      - '--allow-unauthenticated'
      - '--memory=8Gi'
      - '--cpu=4'
      - '--concurrency=1000'
      - '--min-instances=5'
      - '--max-instances=100'
      - '--timeout=3600'
      - '--service-account=wfa-production@$PROJECT_ID.iam.gserviceaccount.com'
      - '--set-env-vars=NODE_ENV=production,WFA_AGENTS_COUNT=20000000,WFA_SECTORS_COUNT=200,JOB_CLUSTERS_COUNT=64000000,CAREER_CLUSTERS_COUNT=319998,VICTORY36_PROTECTION=maximum,CLOUD_TO_CLOUD_MODE=true,MCP_DNS_AUTOMATION=enabled'
      - '--set-secrets=MONGODB_CONNECTION_STRING=mongodb-atlas-connection:latest,CLOUDFLARE_API_TOKEN=cloudflare-api-token:latest,CLOUDFLARE_ZONE_ID=cloudflare-zone-id:latest'
      - '--quiet'

  # Step 5: Get the service URL and display deployment info
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "üöÄ WFA Production Swarm deployed successfully!"
        echo "üåê Cloud Run Service URL: https://wfa-production-swarm-859242575175.a.run.app"
        echo "üîó Cloudflare Workers: https://asoos.2100.cool/wfa/"
        echo "üë®‚Äçüíº Commander: Phillip Corey Roark"
        echo "üìä Managing 20M agents across 200 sectors"
        echo "üõ°Ô∏è  Victory36 Protection: MAXIMUM"
        echo "‚ö° Cloud-to-Cloud Mode: ENABLED"

# Cloud Build options
options:
  machineType: 'E2_HIGHCPU_32'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY
  env:
    - 'CLOUDSDK_RUN_REGION=us-west1'

# Build timeout (20 minutes)
timeout: '1200s'

# Images to be pushed to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/wfa-production-swarm:latest'
  - 'gcr.io/$PROJECT_ID/wfa-production-swarm:$BUILD_ID'

# Tags for build identification
tags:
  - 'wfa-production-swarm'
  - 'victory36-protection'
  - 'cloud-to-cloud'
  - 'asoos-deployment'
