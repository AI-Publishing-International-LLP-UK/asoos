{
  "collection": {
    "item": [
      {
        "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
        "name": "SallyPort Health Check",
        "request": {
          "url": {
            "path": [
              "health"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
              "type": "text/javascript",
              "exec": [
                "pm.test('Health check returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response contains status', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('status');",
                "});"
              ],
              "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
            }
          }
        ]
      },
      {
        "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
        "name": "SallyPort Authentication",
        "request": {
          "url": {
            "path": [
              "api",
              "auth",
              "sallyport"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
              "type": "text/javascript",
              "exec": [
                "pm.test('Authentication successful', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Returns authentication token', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('token');",
                "    pm.globals.set('auth_token', responseJson.token);",
                "});",
                "",
                "pm.test('Returns user information', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('user');",
                "    pm.expect(responseJson.user).to.have.property('uuid');",
                "});"
              ],
              "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
            }
          }
        ]
      },
      {
        "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
        "name": "Token Verification",
        "request": {
          "url": {
            "path": [
              "api",
              "auth",
              "verify"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
              "type": "text/javascript",
              "exec": [
                "pm.test('Token verification successful', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Token is valid', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('valid', true);",
                "});",
                "",
                "pm.test('Returns user context', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('user');",
                "});"
              ],
              "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
            }
          }
        ]
      },
      {
        "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
        "name": "ASOOS Symphony Access",
        "request": {
          "url": {
            "path": [
              "api",
              "symphony",
              "status"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
              "type": "text/javascript",
              "exec": [
                "pm.test('Symphony access authorized', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Symphony status available', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('components');",
                "});",
                "",
                "pm.test('One-click authentication flow complete', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('status', 'active');",
                "});"
              ],
              "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
            }
          }
        ]
      },
      {
        "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
        "name": "Agent Access Test",
        "request": {
          "url": {
            "path": [
              "api",
              "agents",
              "status"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
              "type": "text/javascript",
              "exec": [
                "pm.test('Agent access authorized', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Agent status available', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('agents');",
                "});"
              ],
              "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [
      {
        "type": "any",
        "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
        "key": "base_url"
      }
    ],
    "info": {
      "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
      "name": "SallyPort Authentication Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Testing SallyPort authentication endpoints for ASOOS integration",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "72f2e2d1-5e77-4d2a-a770-89fcb4dcfda6",
    "values": []
  },
  "globals": {
    "id": "09f62b76-1a6d-4e3f-9a4a-a9979bd12924",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 13,
        "pending": 0,
        "failed": 11
      },
      "testScripts": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 144.4,
      "responseMin": 86,
      "responseMax": 225,
      "responseSd": 53.09086550434077,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1753896612424,
      "completed": 1753896613248
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 5,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a843c498-ddc5-4bf5-a87f-ce422525e5dd",
          "httpRequestId": "0164b76c-b03c-402b-846b-170f06e1f9ee"
        },
        "item": {
          "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
          "name": "SallyPort Health Check",
          "request": {
            "url": {
              "path": [
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Health check returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains status', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('status');",
                  "});"
                ],
                "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "health"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d8287d8e-7c61-4d4b-aab8-1d961550a031",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "fc122dd3-b51b-4ca5-8d4d-a13230d6855b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"ec-IWMNcJcQQCYtLJAL0bbCiF7PKQ8\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "31dfd5720a633b1e91e34bef54d2e6d6;o=1"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 17:30:12 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "236"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              49,
              55,
              58,
              51,
              48,
              58,
              49,
              50,
              46,
              55,
              50,
              53,
              90,
              34,
              44,
              34,
              117,
              112,
              116,
              105,
              109,
              101,
              34,
              58,
              52,
              48,
              53,
              55,
              52,
              56,
              46,
              49,
              53,
              52,
              54,
              48,
              49,
              50,
              55,
              55,
              44,
              34,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              34,
              58,
              34,
              100,
              101,
              118,
              101,
              108,
              111,
              112,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              109,
              101,
              109,
              111,
              114,
              121,
              34,
              58,
              123,
              34,
              114,
              115,
              115,
              34,
              58,
              53,
              53,
              52,
              51,
              53,
              50,
              54,
              52,
              44,
              34,
              104,
              101,
              97,
              112,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              56,
              51,
              54,
              52,
              48,
              51,
              50,
              44,
              34,
              104,
              101,
              97,
              112,
              85,
              115,
              101,
              100,
              34,
              58,
              55,
              57,
              52,
              48,
              54,
              57,
              54,
              44,
              34,
              101,
              120,
              116,
              101,
              114,
              110,
              97,
              108,
              34,
              58,
              50,
              48,
              52,
              55,
              50,
              54,
              48,
              44,
              34,
              97,
              114,
              114,
              97,
              121,
              66,
              117,
              102,
              102,
              101,
              114,
              115,
              34,
              58,
              49,
              54,
              56,
              56,
              55,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 225,
          "responseSize": 236
        },
        "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
        "assertions": [
          {
            "assertion": "Health check returns 200",
            "skipped": false
          },
          {
            "assertion": "Response contains status",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f1713d9e-75ed-4a27-8cd0-a6cc14c23478",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cdfd8933-0bd1-4b19-a1ed-bbd88cbf7c5e"
        },
        "item": {
          "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
          "name": "SallyPort Authentication",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "sallyport"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Authentication successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Returns authentication token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.globals.set('auth_token', responseJson.token);",
                  "});",
                  "",
                  "pm.test('Returns user information', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "    pm.expect(responseJson.user).to.have.property('uuid');",
                  "});"
                ],
                "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "auth",
              "sallyport"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cc427649-44c7-40ea-a982-cc4a434dcd50",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "87",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
          }
        },
        "response": {
          "id": "771c67bb-6194-409d-ab40-9b4ad5a2aa5f",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"71-z2GxXIbilmnj9iWBrxmXBBMPQ1A\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "ffae70d42902fdd891e34bef54d2e6e2"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 17:30:12 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "113"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              111,
              117,
              116,
              101,
              32,
              80,
              79,
              83,
              84,
              32,
              47,
              97,
              112,
              105,
              47,
              97,
              117,
              116,
              104,
              47,
              115,
              97,
              108,
              108,
              121,
              112,
              111,
              114,
              116,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              49,
              55,
              58,
              51,
              48,
              58,
              49,
              50,
              46,
              56,
              57,
              52,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 127,
          "responseSize": 113
        },
        "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
        "assertions": [
          {
            "assertion": "Authentication successful",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Authentication successful",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Returns authentication token",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Returns authentication token",
              "message": "expected { error: 'Not found', …(2) } to have property 'token'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'token'\n   at Object.eval sandbox-script.js:2:2)"
            }
          },
          {
            "assertion": "Returns user information",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Returns user information",
              "message": "expected { error: 'Not found', …(2) } to have property 'user'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'user'\n   at Object.eval sandbox-script.js:3:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "5cbd8b92-4e4f-48ad-9754-03de4a8c394c",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7cc3ba96-9785-4d8b-aca9-6301251e704b"
        },
        "item": {
          "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
          "name": "Token Verification",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "verify"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token verification successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Token is valid', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('valid', true);",
                  "});",
                  "",
                  "pm.test('Returns user context', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "});"
                ],
                "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "auth",
              "verify"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ba7b7479-1850-4125-974b-f294558347db",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "54",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
          }
        },
        "response": {
          "id": "1e999946-5aee-426c-98fd-b54a99b2d328",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"6e-WcRIMOWKQmm4OCQDetk2sRp/MIw\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "105a6573468e90fd91e34bef54d2e179"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 17:30:13 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "110"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              111,
              117,
              116,
              101,
              32,
              80,
              79,
              83,
              84,
              32,
              47,
              97,
              112,
              105,
              47,
              97,
              117,
              116,
              104,
              47,
              118,
              101,
              114,
              105,
              102,
              121,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              49,
              55,
              58,
              51,
              48,
              58,
              49,
              51,
              46,
              49,
              48,
              51,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 186,
          "responseSize": 110
        },
        "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
        "assertions": [
          {
            "assertion": "Token verification successful",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Token verification successful",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Token is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Token is valid",
              "message": "expected { error: 'Not found', …(2) } to have property 'valid'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'valid'\n   at Object.eval sandbox-script.js:2:3)"
            }
          },
          {
            "assertion": "Returns user context",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Returns user context",
              "message": "expected { error: 'Not found', …(2) } to have property 'user'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'user'\n   at Object.eval sandbox-script.js:3:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ca210e20-df22-443e-8820-7ea4525e23be",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "986e1817-f052-43b2-b70f-299787e19d1a"
        },
        "item": {
          "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
          "name": "ASOOS Symphony Access",
          "request": {
            "url": {
              "path": [
                "api",
                "symphony",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Symphony access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Symphony status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('components');",
                  "});",
                  "",
                  "pm.test('One-click authentication flow complete', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('status', 'active');",
                  "});"
                ],
                "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "symphony",
              "status"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7283e0f7-8dfe-45c1-8c57-dd12c42c42d3",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "5b321ebf-d685-4328-be25-e49a5fa4407d",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"71-Ngi9oZXXz8NE3egPU28N1oJzCX8\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "564274734c4b5c0a91e34bef54d2e7d0"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 17:30:13 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "113"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              111,
              117,
              116,
              101,
              32,
              71,
              69,
              84,
              32,
              47,
              97,
              112,
              105,
              47,
              115,
              121,
              109,
              112,
              104,
              111,
              110,
              121,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              49,
              55,
              58,
              51,
              48,
              58,
              49,
              51,
              46,
              50,
              48,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 86,
          "responseSize": 113
        },
        "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
        "assertions": [
          {
            "assertion": "Symphony access authorized",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Symphony access authorized",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Symphony status available",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Symphony status available",
              "message": "expected { error: 'Not found', …(2) } to have property 'components'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'components'\n   at Object.eval sandbox-script.js:2:4)"
            }
          },
          {
            "assertion": "One-click authentication flow complete",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "One-click authentication flow complete",
              "message": "expected { error: 'Not found', …(2) } to have property 'status'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'status'\n   at Object.eval sandbox-script.js:3:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d733b2d7-d2d9-44d4-a25f-8c739a6725cf",
          "length": 5,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6939d590-8b47-45b1-93c0-83e99ea8035a"
        },
        "item": {
          "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
          "name": "Agent Access Test",
          "request": {
            "url": {
              "path": [
                "api",
                "agents",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Agent access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Agent status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('agents');",
                  "});"
                ],
                "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "agents",
              "status"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e10d7749-9e4b-4208-a5a6-2c9b7bcaacfb",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "114c79e0-2fb7-4944-b3b0-93649e5cc807",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"6f-04fn/8MWwHkKV4hIOz6qpL5/od8\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "beaee6f5bff8cdad91e34bef54d2efd9"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 17:30:13 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "111"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              111,
              117,
              116,
              101,
              32,
              71,
              69,
              84,
              32,
              47,
              97,
              112,
              105,
              47,
              97,
              103,
              101,
              110,
              116,
              115,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              49,
              55,
              58,
              51,
              48,
              58,
              49,
              51,
              46,
              51,
              49,
              49,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 98,
          "responseSize": 111
        },
        "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
        "assertions": [
          {
            "assertion": "Agent access authorized",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Agent access authorized",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Agent status available",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Agent status available",
              "message": "expected { error: 'Not found', …(2) } to have property 'agents'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'agents'\n   at Object.eval sandbox-script.js:2:5)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 683
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Authentication successful",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "0140e19878f3d465014a96f4c94df467",
          "id": "cee502ce-807a-47b9-bf58-70ede0fe1c1d",
          "timestamp": 1753896612819,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
          "name": "SallyPort Authentication",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "sallyport"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Authentication successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Returns authentication token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.globals.set('auth_token', responseJson.token);",
                  "});",
                  "",
                  "pm.test('Returns user information', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "    pm.expect(responseJson.user).to.have.property('uuid');",
                  "});"
                ],
                "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f1713d9e-75ed-4a27-8cd0-a6cc14c23478",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cdfd8933-0bd1-4b19-a1ed-bbd88cbf7c5e",
          "scriptId": "faaf9a57-1d15-4495-a32f-579c48de8950",
          "execution": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Returns authentication token",
          "message": "expected { error: 'Not found', …(2) } to have property 'token'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'token'\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "9c50f76d58e298cd3bafff003048bdcc",
          "id": "3729a49c-091b-4d73-923d-80904becf40b",
          "timestamp": 1753896612823,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
          "name": "SallyPort Authentication",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "sallyport"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Authentication successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Returns authentication token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.globals.set('auth_token', responseJson.token);",
                  "});",
                  "",
                  "pm.test('Returns user information', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "    pm.expect(responseJson.user).to.have.property('uuid');",
                  "});"
                ],
                "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f1713d9e-75ed-4a27-8cd0-a6cc14c23478",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cdfd8933-0bd1-4b19-a1ed-bbd88cbf7c5e",
          "scriptId": "faaf9a57-1d15-4495-a32f-579c48de8950",
          "execution": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Returns user information",
          "message": "expected { error: 'Not found', …(2) } to have property 'user'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'user'\n   at Object.eval sandbox-script.js:3:2)",
          "checksum": "5ff55d9f567c6962dc3e347ef9c7ed08",
          "id": "e96cfc1a-0641-4773-b6d4-78b1833e7749",
          "timestamp": 1753896612824,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
          "name": "SallyPort Authentication",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "sallyport"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Authentication successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Returns authentication token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.globals.set('auth_token', responseJson.token);",
                  "});",
                  "",
                  "pm.test('Returns user information', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "    pm.expect(responseJson.user).to.have.property('uuid');",
                  "});"
                ],
                "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f1713d9e-75ed-4a27-8cd0-a6cc14c23478",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cdfd8933-0bd1-4b19-a1ed-bbd88cbf7c5e",
          "scriptId": "faaf9a57-1d15-4495-a32f-579c48de8950",
          "execution": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Token verification successful",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "35ab44d1d1f7f8dcb18d9c07248ef9f1",
          "id": "02a19345-ee70-46a6-a98c-d01afcf3227e",
          "timestamp": 1753896613025,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
          "name": "Token Verification",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "verify"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token verification successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Token is valid', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('valid', true);",
                  "});",
                  "",
                  "pm.test('Returns user context', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "});"
                ],
                "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "5cbd8b92-4e4f-48ad-9754-03de4a8c394c",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7cc3ba96-9785-4d8b-aca9-6301251e704b",
          "scriptId": "5bfc7532-d3f7-41f4-8147-438d452c282b",
          "execution": "82597e83-fe57-4a49-85fc-2186429f6b2e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Token is valid",
          "message": "expected { error: 'Not found', …(2) } to have property 'valid'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'valid'\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "fc83e5a6ef9e36457eb5b3e773c0f29a",
          "id": "39ba840a-6473-4a1d-9d45-e81ba1594931",
          "timestamp": 1753896613027,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
          "name": "Token Verification",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "verify"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token verification successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Token is valid', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('valid', true);",
                  "});",
                  "",
                  "pm.test('Returns user context', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "});"
                ],
                "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "5cbd8b92-4e4f-48ad-9754-03de4a8c394c",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7cc3ba96-9785-4d8b-aca9-6301251e704b",
          "scriptId": "5bfc7532-d3f7-41f4-8147-438d452c282b",
          "execution": "82597e83-fe57-4a49-85fc-2186429f6b2e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Returns user context",
          "message": "expected { error: 'Not found', …(2) } to have property 'user'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'user'\n   at Object.eval sandbox-script.js:3:3)",
          "checksum": "2c0369e829ccc7a144206c58f3ec52d0",
          "id": "d9a92097-e4c0-4836-bf75-13ce914c071b",
          "timestamp": 1753896613028,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
          "name": "Token Verification",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "verify"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token verification successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Token is valid', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('valid', true);",
                  "});",
                  "",
                  "pm.test('Returns user context', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "});"
                ],
                "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "5cbd8b92-4e4f-48ad-9754-03de4a8c394c",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7cc3ba96-9785-4d8b-aca9-6301251e704b",
          "scriptId": "5bfc7532-d3f7-41f4-8147-438d452c282b",
          "execution": "82597e83-fe57-4a49-85fc-2186429f6b2e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Symphony access authorized",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "87ad030ddd480cda6aa865f3075ddadc",
          "id": "4f0bda2f-e77a-44bc-912d-b1ebd1f58c8b",
          "timestamp": 1753896613129,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
          "name": "ASOOS Symphony Access",
          "request": {
            "url": {
              "path": [
                "api",
                "symphony",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Symphony access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Symphony status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('components');",
                  "});",
                  "",
                  "pm.test('One-click authentication flow complete', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('status', 'active');",
                  "});"
                ],
                "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "ca210e20-df22-443e-8820-7ea4525e23be",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "986e1817-f052-43b2-b70f-299787e19d1a",
          "scriptId": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
          "execution": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Symphony status available",
          "message": "expected { error: 'Not found', …(2) } to have property 'components'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'components'\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "3ec7824c254cde934f06010cd491f153",
          "id": "d35bd9fe-c766-4682-bc14-fac037d85b14",
          "timestamp": 1753896613130,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
          "name": "ASOOS Symphony Access",
          "request": {
            "url": {
              "path": [
                "api",
                "symphony",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Symphony access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Symphony status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('components');",
                  "});",
                  "",
                  "pm.test('One-click authentication flow complete', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('status', 'active');",
                  "});"
                ],
                "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "ca210e20-df22-443e-8820-7ea4525e23be",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "986e1817-f052-43b2-b70f-299787e19d1a",
          "scriptId": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
          "execution": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "One-click authentication flow complete",
          "message": "expected { error: 'Not found', …(2) } to have property 'status'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'status'\n   at Object.eval sandbox-script.js:3:4)",
          "checksum": "78702bcfcc4abd7d7c8566499d0a8b6f",
          "id": "10238b25-9c72-4804-a0d7-377fe8ec97dc",
          "timestamp": 1753896613130,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
          "name": "ASOOS Symphony Access",
          "request": {
            "url": {
              "path": [
                "api",
                "symphony",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Symphony access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Symphony status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('components');",
                  "});",
                  "",
                  "pm.test('One-click authentication flow complete', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('status', 'active');",
                  "});"
                ],
                "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "ca210e20-df22-443e-8820-7ea4525e23be",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "986e1817-f052-43b2-b70f-299787e19d1a",
          "scriptId": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
          "execution": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Agent access authorized",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "cc51cb9b9f87d8385f4ff37eeb35d6ae",
          "id": "330b7b61-c766-4a9a-a4e4-da4aa2018731",
          "timestamp": 1753896613242,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
          "name": "Agent Access Test",
          "request": {
            "url": {
              "path": [
                "api",
                "agents",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Agent access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Agent status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('agents');",
                  "});"
                ],
                "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "d733b2d7-d2d9-44d4-a25f-8c739a6725cf",
          "length": 5,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6939d590-8b47-45b1-93c0-83e99ea8035a",
          "scriptId": "e32f7913-20c6-4828-bd74-1503d87e0e87",
          "execution": "e10df754-057d-4741-9be7-e73c6442a78c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Agent status available",
          "message": "expected { error: 'Not found', …(2) } to have property 'agents'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'agents'\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "97df19c939987fe2510aecf161c08467",
          "id": "9c621a58-8d45-4588-a60a-fc7f13fdf722",
          "timestamp": 1753896613243,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
          "name": "Agent Access Test",
          "request": {
            "url": {
              "path": [
                "api",
                "agents",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Agent access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Agent status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('agents');",
                  "});"
                ],
                "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "47c6a211-d2a1-4c40-ab66-8bc01f0a071c",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4e7cc23-026d-4a4c-aa66-b495e4cb7968",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "97d91e2f-4743-4a8e-b2c5-c8e080600dc5"
                  }
                }
              ]
            },
            {
              "id": "07a8f8d7-01a6-4d3d-8162-df697460f5ad",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faaf9a57-1d15-4495-a32f-579c48de8950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "aaffbdcf-ac2b-4532-9d3f-8bb692658297"
                  }
                }
              ]
            },
            {
              "id": "e99abc55-e674-4cfc-860a-885bb913d9dc",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfc7532-d3f7-41f4-8147-438d452c282b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "82597e83-fe57-4a49-85fc-2186429f6b2e"
                  }
                }
              ]
            },
            {
              "id": "b7e42dd5-4e37-4740-855c-322fe7eca8cb",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "340fdba6-1bf4-4e78-bad6-d88fb8d8f974",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "cd492109-e0bd-4f8b-b7a2-6dfd793c09aa"
                  }
                }
              ]
            },
            {
              "id": "22229e9f-414c-43bd-9c54-9ccdc70b7805",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e32f7913-20c6-4828-bd74-1503d87e0e87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "e10df754-057d-4741-9be7-e73c6442a78c"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "589c0478-36f8-4839-9bbe-fc196fd58042",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "d733b2d7-d2d9-44d4-a25f-8c739a6725cf",
          "length": 5,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6939d590-8b47-45b1-93c0-83e99ea8035a",
          "scriptId": "e32f7913-20c6-4828-bd74-1503d87e0e87",
          "execution": "e10df754-057d-4741-9be7-e73c6442a78c"
        }
      }
    ],
    "error": null
  }
}