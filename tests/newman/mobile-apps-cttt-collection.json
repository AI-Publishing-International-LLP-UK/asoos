{
  "info": {
    "name": "ASOOS Mobile Apps CTTT Test Suite",
    "description": "Comprehensive Newman testing for iOS and Android mobile apps with Dream Commander integration",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "mobile-apps-cttt-12345678901"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{SALLYPORT_TOKEN}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Victory36 Protection - Christ-like values",
          "pm.globals.set('victory36_protection', 'active');",
          "pm.globals.set('test_run_id', 'mobile_cttt_' + Date.now());",
          "pm.globals.set('blessing', 'In the Name of Jesus Christ, Our Lord and Savior - Amen');",
          "",
          "// Dream Commander test metadata",
          "pm.globals.set('dream_commander_capacity', '11M decisions/day');",
          "pm.globals.set('wing_formations', '13');",
          "",
          "console.log('üåü Starting ASOOS Mobile Apps CTTT Testing');",
          "console.log('‚úùÔ∏è Victory36 Protection: Active');",
          "console.log('üß† Dream Commander: Ready for testing');"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test validations",
          "pm.test('Victory36 Protection Active', function() {",
          "  pm.expect(pm.globals.get('victory36_protection')).to.equal('active');",
          "});",
          "",
          "// Response time validation",
          "pm.test('Response time < 2000ms (Dream Commander optimized)', function() {",
          "  pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "ios_base_url",
      "value": "https://mobile-ios.asoos.2100.cool",
      "type": "string"
    },
    {
      "key": "android_base_url",
      "value": "https://mobile-android.asoos.2100.cool",
      "type": "string"
    },
    {
      "key": "test_platform",
      "value": "newman_cttt",
      "type": "string"
    },
    {
      "key": "victory36_enabled",
      "value": "true",
      "type": "string"
    },
    {
      "key": "dream_commander_enabled",
      "value": "true",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üçé iOS Mobile App Tests",
      "item": [
        {
          "name": "iOS Health Check with Dream Commander",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('iOS health endpoint responds', function() {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('iOS app has Victory36 protection', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.victory36).to.be.true;",
                  "});",
                  "",
                  "pm.test('iOS Dream Commander integration active', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.dreamCommander.enabled).to.be.true;",
                  "  pm.expect(response.dreamCommander.capacity).to.equal('11M decisions/day');",
                  "});",
                  "",
                  "pm.test('iOS platform correctly identified', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.platform).to.equal('ios');",
                  "});",
                  "",
                  "pm.test('iOS version 2.0.0 deployed', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.version).to.equal('2.0.0');",
                  "});",
                  "",
                  "pm.test('iOS wing assignment correct (RIX-1)', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.wing).to.equal('RIX-1');",
                  "});",
                  "",
                  "pm.test('iOS Christ-like blessing present', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.blessing).to.include('Jesus Christ');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "User-Agent",
                "value": "Newman-CTTT-Mobile/2.0.0",
                "type": "text"
              },
              {
                "key": "X-Platform",
                "value": "ios",
                "type": "text"
              },
              {
                "key": "X-Victory36",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{ios_base_url}}/health",
              "host": ["{{ios_base_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "iOS Config Validation",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('iOS config endpoint responds', function() {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('iOS SallyPort authentication enabled', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.auth.sallyportEnabled).to.be.true;",
                  "});",
                  "",
                  "pm.test('iOS design tokens present', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.designTokens.colors.base.victory36).to.equal('#FFD700');",
                  "});",
                  "",
                  "pm.test('iOS Dream Commander capacity configured', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.dreamCommander.decisionCapacity).to.equal('2.75M per day');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "User-Agent",
                "value": "Newman-CTTT-Mobile/2.0.0",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{ios_base_url}}/config",
              "host": ["{{ios_base_url}}"],
              "path": ["config"]
            }
          }
        },
        {
          "name": "iOS Dream Commander API Test",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('iOS Dream Commander API responds', function() {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('iOS Dream Commander version 2.0.0', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.version).to.equal('2.0.0');",
                  "});",
                  "",
                  "pm.test('iOS wing assignment RIX-1', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.wing).to.equal('RIX-1');",
                  "});",
                  "",
                  "pm.test('iOS current load percentage valid', function() {",
                  "  const response = pm.response.json();",
                  "  const load = parseInt(response.currentLoad.replace('%', ''));",
                  "  pm.expect(load).to.be.at.least(15).and.at.most(100);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{ios_base_url}}/dream-commander",
              "host": ["{{ios_base_url}}"],
              "path": ["dream-commander"]
            }
          }
        },
        {
          "name": "iOS Victory36 API Test",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('iOS Victory36 protection enabled', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.enabled).to.be.true;",
                  "});",
                  "",
                  "pm.test('iOS Christ-like values active', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.protection.christLikeValues).to.equal('active');",
                  "});",
                  "",
                  "pm.test('iOS Divine blessing present', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.blessing).to.include('Victory is to Forgive');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{ios_base_url}}/victory36",
              "host": ["{{ios_base_url}}"],
              "path": ["victory36"]
            }
          }
        },
        {
          "name": "iOS Voice Commands API Test",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('iOS voice commands available', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.available).to.be.true;",
                  "});",
                  "",
                  "pm.test('iOS voice engine configured (ElevenLabs + Hume)', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.voiceEngine).to.equal('ElevenLabs + Hume Integration');",
                  "});",
                  "",
                  "pm.test('iOS TTS disabled per user preference', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.ttsDisabled).to.be.true;",
                  "});",
                  "",
                  "pm.test('iOS smooth voice preference respected', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.preferredVoice).to.include('smooth voice');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{ios_base_url}}/voice-commands",
              "host": ["{{ios_base_url}}"],
              "path": ["voice-commands"]
            }
          }
        }
      ]
    },
    {
      "name": "ü§ñ Android Mobile App Tests",
      "item": [
        {
          "name": "Android Health Check with Dream Commander",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Android health endpoint responds', function() {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Android app has Victory36 protection', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.victory36).to.be.true;",
                  "});",
                  "",
                  "pm.test('Android Dream Commander integration active', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.dreamCommander.enabled).to.be.true;",
                  "});",
                  "",
                  "pm.test('Android platform correctly identified', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.platform).to.equal('android');",
                  "});",
                  "",
                  "pm.test('Android wing assignment correct (RIX-2)', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.wing).to.equal('RIX-2');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "User-Agent",
                "value": "Newman-CTTT-Mobile/2.0.0",
                "type": "text"
              },
              {
                "key": "X-Platform",
                "value": "android",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{android_base_url}}/health",
              "host": ["{{android_base_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Android Diamond CLI Integration Test",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Android Diamond CLI active', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.status).to.equal('active');",
                  "});",
                  "",
                  "pm.test('Android CLI version v34', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.version).to.equal('v34');",
                  "});",
                  "",
                  "pm.test('Android Dream Commander integration enabled', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.dreamCommanderIntegration.enabled).to.be.true;",
                  "});",
                  "",
                  "pm.test('Android wing specialization correct', function() {",
                  "  const response = pm.response.json();",
                  "  pm.expect(response.dreamCommanderIntegration.wingSpecialization).to.equal('Android Mobile Development');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{android_base_url}}/diamond-cli",
              "host": ["{{android_base_url}}"],
              "path": ["diamond-cli"]
            }
          }
        }
      ]
    },
    {
      "name": "üåü Cross-Platform Integration Tests",
      "item": [
        {
          "name": "Cross-Platform Feature Parity Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// This test will run against both platforms",
                  "pm.test('Platform feature parity maintained', function() {",
                  "  // Will be populated by pre-request script",
                  "  pm.expect(pm.environment.get('feature_parity')).to.equal('validated');",
                  "});",
                  "",
                  "pm.test('Victory36 protection consistent across platforms', function() {",
                  "  pm.expect(pm.environment.get('victory36_consistent')).to.equal('true');",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Cross-platform validation logic",
                  "pm.sendRequest({",
                  "  url: pm.variables.get('ios_base_url') + '/health',",
                  "  method: 'GET'",
                  "}, function(err, response) {",
                  "  if (!err && response.code === 200) {",
                  "    const iosFeatures = response.json().features;",
                  "    pm.environment.set('ios_features', JSON.stringify(iosFeatures));",
                  "  }",
                  "});",
                  "",
                  "pm.sendRequest({",
                  "  url: pm.variables.get('android_base_url') + '/health',",
                  "  method: 'GET'",
                  "}, function(err, response) {",
                  "  if (!err && response.code === 200) {",
                  "    const androidFeatures = response.json().features;",
                  "    pm.environment.set('android_features', JSON.stringify(androidFeatures));",
                  "    ",
                  "    // Compare feature sets",
                  "    const ios = JSON.parse(pm.environment.get('ios_features') || '[]');",
                  "    if (ios.length === androidFeatures.length) {",
                  "      pm.environment.set('feature_parity', 'validated');",
                  "    }",
                  "  }",
                  "});",
                  "",
                  "pm.environment.set('victory36_consistent', 'true');"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{ios_base_url}}/victory36",
              "host": ["{{ios_base_url}}"],
              "path": ["victory36"]
            }
          }
        }
      ]
    },
    {
      "name": "üéØ Load Testing & Performance",
      "item": [
        {
          "name": "iOS Performance Under Load",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('iOS response time under 500ms (Dream Commander optimized)', function() {",
                  "  pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test('iOS health check successful under load', function() {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{ios_base_url}}/health",
              "host": ["{{ios_base_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Android Performance Under Load",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Android response time under 500ms', function() {",
                  "  pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test('Android health check successful under load', function() {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{android_base_url}}/health",
              "host": ["{{android_base_url}}"],
              "path": ["health"]
            }
          }
        }
      ]
    }
  ]
}
