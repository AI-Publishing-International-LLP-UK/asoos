{
  "collection": {
    "item": [
      {
        "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
        "name": "SallyPort Health Check",
        "request": {
          "url": {
            "path": [
              "health"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
              "type": "text/javascript",
              "exec": [
                "pm.test('Health check returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response contains status', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('status');",
                "});"
              ],
              "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
            }
          }
        ]
      },
      {
        "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
        "name": "SallyPort Authentication",
        "request": {
          "url": {
            "path": [
              "api",
              "auth",
              "sallyport"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
              "type": "text/javascript",
              "exec": [
                "pm.test('Authentication successful', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Returns authentication token', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('token');",
                "    pm.globals.set('auth_token', responseJson.token);",
                "});",
                "",
                "pm.test('Returns user information', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('user');",
                "    pm.expect(responseJson.user).to.have.property('uuid');",
                "});"
              ],
              "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
            }
          }
        ]
      },
      {
        "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
        "name": "Token Verification",
        "request": {
          "url": {
            "path": [
              "api",
              "auth",
              "verify"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
              "type": "text/javascript",
              "exec": [
                "pm.test('Token verification successful', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Token is valid', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('valid', true);",
                "});",
                "",
                "pm.test('Returns user context', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('user');",
                "});"
              ],
              "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
            }
          }
        ]
      },
      {
        "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
        "name": "ASOOS Symphony Access",
        "request": {
          "url": {
            "path": [
              "api",
              "symphony",
              "status"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
              "type": "text/javascript",
              "exec": [
                "pm.test('Symphony access authorized', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Symphony status available', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('components');",
                "});",
                "",
                "pm.test('One-click authentication flow complete', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('status', 'active');",
                "});"
              ],
              "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
            }
          }
        ]
      },
      {
        "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
        "name": "Agent Access Test",
        "request": {
          "url": {
            "path": [
              "api",
              "agents",
              "status"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
              "type": "text/javascript",
              "exec": [
                "pm.test('Agent access authorized', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Agent status available', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('agents');",
                "});"
              ],
              "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [
      {
        "type": "any",
        "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
        "key": "base_url"
      }
    ],
    "info": {
      "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
      "name": "SallyPort Authentication Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Testing SallyPort authentication endpoints for ASOOS integration",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "50d18a20-9c5e-4b49-8a37-94a113534b1b",
    "values": []
  },
  "globals": {
    "id": "9410774a-df61-4965-969d-60ef3c5777e7",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 13,
        "pending": 0,
        "failed": 11
      },
      "testScripts": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 122.6,
      "responseMin": 82,
      "responseMax": 262,
      "responseSd": 69.82435105319632,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1753916263355,
      "completed": 1753916264053
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 5,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3b3f6d14-b90f-4f4d-bdc7-ffa0bb49d428",
          "httpRequestId": "79303834-09e1-4321-ad26-b235f1fe46cd"
        },
        "item": {
          "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
          "name": "SallyPort Health Check",
          "request": {
            "url": {
              "path": [
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Health check returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains status', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('status');",
                  "});"
                ],
                "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "health"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3b5364bc-90cb-4218-aefc-09eddf41b0e0",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "d5869062-cb95-438a-baec-f9b9248a21cb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"ec-yJzJ1gqK97x3kSQl3hwXrihu91Y\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "75b2c945f0c6c017b3f38fbaf722bcdb;o=1"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 22:57:43 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "236"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              50,
              50,
              58,
              53,
              55,
              58,
              52,
              51,
              46,
              54,
              57,
              48,
              90,
              34,
              44,
              34,
              117,
              112,
              116,
              105,
              109,
              101,
              34,
              58,
              52,
              50,
              53,
              51,
              57,
              57,
              46,
              49,
              49,
              57,
              54,
              55,
              51,
              49,
              53,
              53,
              44,
              34,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              34,
              58,
              34,
              100,
              101,
              118,
              101,
              108,
              111,
              112,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              109,
              101,
              109,
              111,
              114,
              121,
              34,
              58,
              123,
              34,
              114,
              115,
              115,
              34,
              58,
              53,
              53,
              55,
              50,
              49,
              57,
              56,
              52,
              44,
              34,
              104,
              101,
              97,
              112,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              57,
              49,
              53,
              48,
              52,
              54,
              52,
              44,
              34,
              104,
              101,
              97,
              112,
              85,
              115,
              101,
              100,
              34,
              58,
              55,
              56,
              51,
              48,
              54,
              53,
              54,
              44,
              34,
              101,
              120,
              116,
              101,
              114,
              110,
              97,
              108,
              34,
              58,
              50,
              48,
              52,
              55,
              48,
              54,
              52,
              44,
              34,
              97,
              114,
              114,
              97,
              121,
              66,
              117,
              102,
              102,
              101,
              114,
              115,
              34,
              58,
              49,
              54,
              54,
              57,
              49,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 262,
          "responseSize": 236
        },
        "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
        "assertions": [
          {
            "assertion": "Health check returns 200",
            "skipped": false
          },
          {
            "assertion": "Response contains status",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b3bfc12e-cced-491b-88ff-6fc3e1274104",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ceec09df-799d-47ef-b705-a8ddcf94771f"
        },
        "item": {
          "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
          "name": "SallyPort Authentication",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "sallyport"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Authentication successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Returns authentication token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.globals.set('auth_token', responseJson.token);",
                  "});",
                  "",
                  "pm.test('Returns user information', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "    pm.expect(responseJson.user).to.have.property('uuid');",
                  "});"
                ],
                "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "auth",
              "sallyport"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8cd7d42d-7741-4374-ac0a-0c625057e058",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "87",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
          }
        },
        "response": {
          "id": "ec1f9b39-6325-4bb3-9e75-db2fa9e101eb",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"71-Uvu+D/u/jb3I+810imjzgjKnXIw\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "706fba8666055b5fb3f38fbaf722bd58"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 22:57:43 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "113"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              111,
              117,
              116,
              101,
              32,
              80,
              79,
              83,
              84,
              32,
              47,
              97,
              112,
              105,
              47,
              97,
              117,
              116,
              104,
              47,
              115,
              97,
              108,
              108,
              121,
              112,
              111,
              114,
              116,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              50,
              50,
              58,
              53,
              55,
              58,
              52,
              51,
              46,
              56,
              48,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 87,
          "responseSize": 113
        },
        "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
        "assertions": [
          {
            "assertion": "Authentication successful",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Authentication successful",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Returns authentication token",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Returns authentication token",
              "message": "expected { error: 'Not found', …(2) } to have property 'token'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'token'\n   at Object.eval sandbox-script.js:2:2)"
            }
          },
          {
            "assertion": "Returns user information",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Returns user information",
              "message": "expected { error: 'Not found', …(2) } to have property 'user'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'user'\n   at Object.eval sandbox-script.js:3:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "7ca7cd17-aec5-4d78-9ce6-1ae9d2d4dda1",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "455d8251-f5a3-422e-8d83-3be584fc7609"
        },
        "item": {
          "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
          "name": "Token Verification",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "verify"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token verification successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Token is valid', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('valid', true);",
                  "});",
                  "",
                  "pm.test('Returns user context', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "});"
                ],
                "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "auth",
              "verify"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ad29e8fd-d8c2-44af-ae9e-eba6aa540a62",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "54",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
          }
        },
        "response": {
          "id": "ae0b9db8-d072-4721-a543-24c9602acef7",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"6e-AXrjrU0LmNW/ckb4KauhgjetnpE\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "a88fdfe2b3a42f51b3f38fbaf722bf6d"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 22:57:43 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "110"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              111,
              117,
              116,
              101,
              32,
              80,
              79,
              83,
              84,
              32,
              47,
              97,
              112,
              105,
              47,
              97,
              117,
              116,
              104,
              47,
              118,
              101,
              114,
              105,
              102,
              121,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              50,
              50,
              58,
              53,
              55,
              58,
              52,
              51,
              46,
              57,
              48,
              55,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 82,
          "responseSize": 110
        },
        "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
        "assertions": [
          {
            "assertion": "Token verification successful",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Token verification successful",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Token is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Token is valid",
              "message": "expected { error: 'Not found', …(2) } to have property 'valid'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'valid'\n   at Object.eval sandbox-script.js:2:3)"
            }
          },
          {
            "assertion": "Returns user context",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Returns user context",
              "message": "expected { error: 'Not found', …(2) } to have property 'user'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'user'\n   at Object.eval sandbox-script.js:3:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f26ab4d6-be99-426c-b8a7-dcf8399cadb2",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2b5423a7-b9dc-423e-bd71-bb1e0af37be1"
        },
        "item": {
          "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
          "name": "ASOOS Symphony Access",
          "request": {
            "url": {
              "path": [
                "api",
                "symphony",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Symphony access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Symphony status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('components');",
                  "});",
                  "",
                  "pm.test('One-click authentication flow complete', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('status', 'active');",
                  "});"
                ],
                "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "symphony",
              "status"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6667a30c-d7a2-4c30-a448-083f2ec64a68",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "1efa665e-d08e-4ee9-8562-1bc3b4d969cf",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"71-fd05jHV6EefYLtd84n39J2vnE4I\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "dd48a2beab03fa0fb3f38fbaf722bad6"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 22:57:44 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "113"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              111,
              117,
              116,
              101,
              32,
              71,
              69,
              84,
              32,
              47,
              97,
              112,
              105,
              47,
              115,
              121,
              109,
              112,
              104,
              111,
              110,
              121,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              50,
              50,
              58,
              53,
              55,
              58,
              52,
              52,
              46,
              48,
              48,
              56,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 87,
          "responseSize": 113
        },
        "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
        "assertions": [
          {
            "assertion": "Symphony access authorized",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Symphony access authorized",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Symphony status available",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Symphony status available",
              "message": "expected { error: 'Not found', …(2) } to have property 'components'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'components'\n   at Object.eval sandbox-script.js:2:4)"
            }
          },
          {
            "assertion": "One-click authentication flow complete",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "One-click authentication flow complete",
              "message": "expected { error: 'Not found', …(2) } to have property 'status'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'status'\n   at Object.eval sandbox-script.js:3:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d5bd6403-1f65-480d-98fe-62d955da5c75",
          "length": 5,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7dee9cfa-3d07-4543-8f5e-1cd5a01a80d7"
        },
        "item": {
          "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
          "name": "Agent Access Test",
          "request": {
            "url": {
              "path": [
                "api",
                "agents",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Agent access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Agent status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('agents');",
                  "});"
                ],
                "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "agents",
              "status"
            ],
            "host": [
              "integration-gateway-yutylytffa-uw",
              "a",
              "run",
              "app"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6504934c-ed38-46c8-963c-56841d9eb63a",
              "system": true
            },
            {
              "key": "Host",
              "value": "integration-gateway-yutylytffa-uw.a.run.app",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "706f8778-f867-4a38-a29e-a20b8dcd2ccd",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"6f-5PAMWAp4hDG5zkWyfxKl1Ij4luo\""
            },
            {
              "key": "x-cloud-trace-context",
              "value": "d62102e34e9b896ab3f38fbaf722b995"
            },
            {
              "key": "date",
              "value": "Wed, 30 Jul 2025 22:57:44 GMT"
            },
            {
              "key": "server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "111"
            },
            {
              "key": "Alt-Svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              82,
              111,
              117,
              116,
              101,
              32,
              71,
              69,
              84,
              32,
              47,
              97,
              112,
              105,
              47,
              97,
              103,
              101,
              110,
              116,
              115,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              55,
              45,
              51,
              48,
              84,
              50,
              50,
              58,
              53,
              55,
              58,
              52,
              52,
              46,
              49,
              49,
              49,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 95,
          "responseSize": 111
        },
        "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
        "assertions": [
          {
            "assertion": "Agent access authorized",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Agent access authorized",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Agent status available",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Agent status available",
              "message": "expected { error: 'Not found', …(2) } to have property 'agents'",
              "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'agents'\n   at Object.eval sandbox-script.js:2:5)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 683
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Authentication successful",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "0140e19878f3d465014a96f4c94df467",
          "id": "e1f7f378-1e5c-4d9d-ae3a-a75abcb0a254",
          "timestamp": 1753916263737,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
          "name": "SallyPort Authentication",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "sallyport"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Authentication successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Returns authentication token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.globals.set('auth_token', responseJson.token);",
                  "});",
                  "",
                  "pm.test('Returns user information', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "    pm.expect(responseJson.user).to.have.property('uuid');",
                  "});"
                ],
                "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b3bfc12e-cced-491b-88ff-6fc3e1274104",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ceec09df-799d-47ef-b705-a8ddcf94771f",
          "scriptId": "d148a256-b602-4134-be82-fb2c3bf3d45c",
          "execution": "b6e44cf9-0ddb-4470-850d-002998f1e818"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Returns authentication token",
          "message": "expected { error: 'Not found', …(2) } to have property 'token'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'token'\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "9c50f76d58e298cd3bafff003048bdcc",
          "id": "7a19c209-b85a-484a-96d1-2f35d6aa71c4",
          "timestamp": 1753916263739,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
          "name": "SallyPort Authentication",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "sallyport"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Authentication successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Returns authentication token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.globals.set('auth_token', responseJson.token);",
                  "});",
                  "",
                  "pm.test('Returns user information', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "    pm.expect(responseJson.user).to.have.property('uuid');",
                  "});"
                ],
                "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b3bfc12e-cced-491b-88ff-6fc3e1274104",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ceec09df-799d-47ef-b705-a8ddcf94771f",
          "scriptId": "d148a256-b602-4134-be82-fb2c3bf3d45c",
          "execution": "b6e44cf9-0ddb-4470-850d-002998f1e818"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Returns user information",
          "message": "expected { error: 'Not found', …(2) } to have property 'user'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'user'\n   at Object.eval sandbox-script.js:3:2)",
          "checksum": "5ff55d9f567c6962dc3e347ef9c7ed08",
          "id": "2b8a6048-423a-4b22-80b5-a2cad1f8413e",
          "timestamp": 1753916263740,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
          "name": "SallyPort Authentication",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "sallyport"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Authentication successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Returns authentication token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.globals.set('auth_token', responseJson.token);",
                  "});",
                  "",
                  "pm.test('Returns user information', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "    pm.expect(responseJson.user).to.have.property('uuid');",
                  "});"
                ],
                "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b3bfc12e-cced-491b-88ff-6fc3e1274104",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ceec09df-799d-47ef-b705-a8ddcf94771f",
          "scriptId": "d148a256-b602-4134-be82-fb2c3bf3d45c",
          "execution": "b6e44cf9-0ddb-4470-850d-002998f1e818"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Token verification successful",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "35ab44d1d1f7f8dcb18d9c07248ef9f1",
          "id": "a9671649-a5eb-4e78-a938-84ff63c581fc",
          "timestamp": 1753916263835,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
          "name": "Token Verification",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "verify"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token verification successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Token is valid', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('valid', true);",
                  "});",
                  "",
                  "pm.test('Returns user context', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "});"
                ],
                "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "7ca7cd17-aec5-4d78-9ce6-1ae9d2d4dda1",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "455d8251-f5a3-422e-8d83-3be584fc7609",
          "scriptId": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
          "execution": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Token is valid",
          "message": "expected { error: 'Not found', …(2) } to have property 'valid'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'valid'\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "fc83e5a6ef9e36457eb5b3e773c0f29a",
          "id": "c04de230-2c8b-4764-94ee-7bebf818fa88",
          "timestamp": 1753916263836,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
          "name": "Token Verification",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "verify"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token verification successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Token is valid', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('valid', true);",
                  "});",
                  "",
                  "pm.test('Returns user context', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "});"
                ],
                "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "7ca7cd17-aec5-4d78-9ce6-1ae9d2d4dda1",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "455d8251-f5a3-422e-8d83-3be584fc7609",
          "scriptId": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
          "execution": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Returns user context",
          "message": "expected { error: 'Not found', …(2) } to have property 'user'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'user'\n   at Object.eval sandbox-script.js:3:3)",
          "checksum": "2c0369e829ccc7a144206c58f3ec52d0",
          "id": "ea34a0dd-a58b-4b7f-8503-1e52b6c9a32b",
          "timestamp": 1753916263837,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
          "name": "Token Verification",
          "request": {
            "url": {
              "path": [
                "api",
                "auth",
                "verify"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token verification successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Token is valid', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('valid', true);",
                  "});",
                  "",
                  "pm.test('Returns user context', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "});"
                ],
                "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "7ca7cd17-aec5-4d78-9ce6-1ae9d2d4dda1",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "455d8251-f5a3-422e-8d83-3be584fc7609",
          "scriptId": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
          "execution": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Symphony access authorized",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "87ad030ddd480cda6aa865f3075ddadc",
          "id": "76166348-8f49-4fbb-a5ca-1a5e37901c81",
          "timestamp": 1753916263937,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
          "name": "ASOOS Symphony Access",
          "request": {
            "url": {
              "path": [
                "api",
                "symphony",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Symphony access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Symphony status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('components');",
                  "});",
                  "",
                  "pm.test('One-click authentication flow complete', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('status', 'active');",
                  "});"
                ],
                "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f26ab4d6-be99-426c-b8a7-dcf8399cadb2",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2b5423a7-b9dc-423e-bd71-bb1e0af37be1",
          "scriptId": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
          "execution": "25756637-5c34-4238-9478-f8b40b6cc9b0"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Symphony status available",
          "message": "expected { error: 'Not found', …(2) } to have property 'components'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'components'\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "3ec7824c254cde934f06010cd491f153",
          "id": "626026bc-4552-424c-936a-a879ba23b2b7",
          "timestamp": 1753916263938,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
          "name": "ASOOS Symphony Access",
          "request": {
            "url": {
              "path": [
                "api",
                "symphony",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Symphony access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Symphony status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('components');",
                  "});",
                  "",
                  "pm.test('One-click authentication flow complete', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('status', 'active');",
                  "});"
                ],
                "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f26ab4d6-be99-426c-b8a7-dcf8399cadb2",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2b5423a7-b9dc-423e-bd71-bb1e0af37be1",
          "scriptId": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
          "execution": "25756637-5c34-4238-9478-f8b40b6cc9b0"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "One-click authentication flow complete",
          "message": "expected { error: 'Not found', …(2) } to have property 'status'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'status'\n   at Object.eval sandbox-script.js:3:4)",
          "checksum": "78702bcfcc4abd7d7c8566499d0a8b6f",
          "id": "f6ddc876-5688-4f4f-b0f0-f0913b669e92",
          "timestamp": 1753916263938,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
          "name": "ASOOS Symphony Access",
          "request": {
            "url": {
              "path": [
                "api",
                "symphony",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Symphony access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Symphony status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('components');",
                  "});",
                  "",
                  "pm.test('One-click authentication flow complete', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('status', 'active');",
                  "});"
                ],
                "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f26ab4d6-be99-426c-b8a7-dcf8399cadb2",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2b5423a7-b9dc-423e-bd71-bb1e0af37be1",
          "scriptId": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
          "execution": "25756637-5c34-4238-9478-f8b40b6cc9b0"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Agent access authorized",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "cc51cb9b9f87d8385f4ff37eeb35d6ae",
          "id": "fc384511-02ae-4c15-86fc-6fa781edfddf",
          "timestamp": 1753916264048,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
          "name": "Agent Access Test",
          "request": {
            "url": {
              "path": [
                "api",
                "agents",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Agent access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Agent status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('agents');",
                  "});"
                ],
                "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "d5bd6403-1f65-480d-98fe-62d955da5c75",
          "length": 5,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7dee9cfa-3d07-4543-8f5e-1cd5a01a80d7",
          "scriptId": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
          "execution": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Agent status available",
          "message": "expected { error: 'Not found', …(2) } to have property 'agents'",
          "stack": "AssertionError: expected { error: 'Not found', …(2) } to have property 'agents'\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "97df19c939987fe2510aecf161c08467",
          "id": "d0f59271-02a4-42e6-b13b-526a307b2ce7",
          "timestamp": 1753916264049,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
          "name": "Agent Access Test",
          "request": {
            "url": {
              "path": [
                "api",
                "agents",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Agent access authorized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Agent status available', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('agents');",
                  "});"
                ],
                "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "5af97605-4228-4d62-9a30-07ff9b9b66db",
              "name": "SallyPort Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a322d99f-3c24-483e-9212-134a704bdbcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});"
                    ],
                    "_lastExecutionId": "be0ff31a-cf6f-4282-90ee-acb99f7aa908"
                  }
                }
              ]
            },
            {
              "id": "a55798e1-1c53-42f2-825d-069bf3c71b40",
              "name": "SallyPort Authentication",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "sallyport"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"uuid\": \"00001\",\n  \"name\": \"Mr. Phillip Corey Roark\",\n  \"role\": \"CEO / Principal\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d148a256-b602-4134-be82-fb2c3bf3d45c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Authentication successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Returns authentication token', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('token');",
                      "    pm.globals.set('auth_token', responseJson.token);",
                      "});",
                      "",
                      "pm.test('Returns user information', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "    pm.expect(responseJson.user).to.have.property('uuid');",
                      "});"
                    ],
                    "_lastExecutionId": "b6e44cf9-0ddb-4470-850d-002998f1e818"
                  }
                }
              ]
            },
            {
              "id": "dceff102-fdda-4d77-ba90-a046ce35809d",
              "name": "Token Verification",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"pr@coaching2100.com\",\n  \"agent\": \"001\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "193b8ffd-658b-41d2-8dd6-efb1c4091280",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token verification successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Token is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('valid', true);",
                      "});",
                      "",
                      "pm.test('Returns user context', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user');",
                      "});"
                    ],
                    "_lastExecutionId": "bc1a1ac3-b2ff-4973-8c42-fd49b1c5104e"
                  }
                }
              ]
            },
            {
              "id": "0d3a4e2d-9a37-45c9-b7e5-a9720986e92d",
              "name": "ASOOS Symphony Access",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "symphony",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "be902c4d-f7d6-4f6f-9ffd-2d657fb093ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Symphony access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Symphony status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('components');",
                      "});",
                      "",
                      "pm.test('One-click authentication flow complete', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('status', 'active');",
                      "});"
                    ],
                    "_lastExecutionId": "25756637-5c34-4238-9478-f8b40b6cc9b0"
                  }
                }
              ]
            },
            {
              "id": "2038c083-e834-4fa0-9d74-51806ef5b244",
              "name": "Agent Access Test",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Agent access authorized', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Agent status available', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('agents');",
                      "});"
                    ],
                    "_lastExecutionId": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "https://integration-gateway-yutylytffa-uw.a.run.app",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "e826385f-7d48-4676-b848-ef292f3cb1f8",
            "name": "SallyPort Authentication Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Testing SallyPort authentication endpoints for ASOOS integration",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "d5bd6403-1f65-480d-98fe-62d955da5c75",
          "length": 5,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7dee9cfa-3d07-4543-8f5e-1cd5a01a80d7",
          "scriptId": "f14a959b-1a8f-4e0f-887b-d312d0f7a851",
          "execution": "68fbd4da-e1be-4d11-9153-924ea5ec0c67"
        }
      }
    ],
    "error": null
  }
}