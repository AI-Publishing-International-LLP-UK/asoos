# üíé AIXTIV SYMPHONY - STANDARDIZED CLOUD BUILD PIPELINE
# üèõÔ∏è  Authority: Diamond SAO Command Center
# üéØ Future-Proof Standards - LOCKED IN

substitutions:
  # Core Standards - LOCKED
  _PROJECT_NAME: 'aixtiv-symphony'
  _REGION: 'us-west1'
  _BASE_IMAGE: 'node:24.7.0-alpine'
  _REGISTRY: 'gcr.io'
  
  # Service Standards - LOCKED
  _CORE_SERVICE_NAME: '${_PROJECT_NAME}-core'
  _MCP_SERVICE_NAME: '${_PROJECT_NAME}-mcp'
  _GATEWAY_SERVICE_NAME: '${_PROJECT_NAME}-gateway'
  _DIAMOND_SERVICE_NAME: '${_PROJECT_NAME}-diamond-sao'
  
  # Environment Zones - LOCKED
  _STAGING_ZONE: 'us-west1-b'
  _PRODUCTION_ZONE: 'us-west1-a'

steps:
  # 1. Environment Standards Validation
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üéØ Validating AIXTIV Symphony Standards..."
        node config/env.standards.js validate
        echo "‚úÖ Standards validation complete"

  # 2. Build Standardized Container
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - '${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}:${BUILD_ID}'
      - '-t'
      - '${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}:latest'
      - '--build-arg'
      - 'NODE_VERSION=24.7.0'
      - '--build-arg'
      - 'BUILD_ID=${BUILD_ID}'
      - '--build-arg'
      - 'BUILD_TIMESTAMP=${BUILD_TIMESTAMP}'
      - '.'
    env:
      - 'BUILD_TIMESTAMP=${TIMESTAMP}'

  # 3. Push Container Images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}:${BUILD_ID}']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}:latest']

  # 4. Deploy to Staging (us-west1-b) - STANDARDIZED
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_CORE_SERVICE_NAME}-staging'
      - '--image=${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}:${BUILD_ID}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--port=8080'
      - '--cpu=2'
      - '--memory=4Gi'
      - '--max-instances=10'
      - '--min-instances=1'
      - '--concurrency=80'
      - '--timeout=3600s'
      - '--set-env-vars=NODE_ENV=staging,ENVIRONMENT_ZONE=${_STAGING_ZONE},AIXTIV_VERSION=1.0.0,DIAMOND_CLI_VERSION=latest,QUANTUM_ORCHESTRATION_VERSION=2.4.7,TRINITY_MODE=active,CTTT_ENABLED=true,NEWMAN_TESTING=enabled,SELF_HEALING=true,QB_LUCY_ACTIVE=true,MOCOA_ORCHESTRATION=enabled,BUILD_ID=${BUILD_ID}'
      - '--set-secrets=ELEVENLABS_API_KEY=ELEVENLABS_API_KEY:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest'
      - '--allow-unauthenticated'
      - '--tag=staging-${BUILD_ID}'

  # 5. Newman CTTT Validation - STANDARDIZED
  - name: 'postman/newman'
    args:
      - 'run'
      - 'tests/collections/aixtiv-symphony-staging.postman_collection.json'
      - '--environment'
      - 'tests/environments/aixtiv-symphony-staging.postman_environment.json'
      - '--reporters'
      - 'json,cli'
      - '--reporter-json-export'
      - 'newman-staging-results.json'
      - '--timeout-request'
      - '30000'
      - '--bail'

  # 6. MCP Service Deployment - STANDARDIZED
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_MCP_SERVICE_NAME}-staging'
      - '--image=${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}:${BUILD_ID}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--port=8080'
      - '--cpu=2'
      - '--memory=4Gi'
      - '--max-instances=10'
      - '--min-instances=1'
      - '--concurrency=80'
      - '--set-env-vars=NODE_ENV=staging,SERVICE_TYPE=mcp,MCP_MASTER_SERVER=mcp.asoos.2100.cool,MCP_COMPANIES_COUNT=10000,BUILD_ID=${BUILD_ID}'
      - '--set-secrets=ELEVENLABS_API_KEY=ELEVENLABS_API_KEY:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest'
      - '--allow-unauthenticated'
      - '--tag=mcp-staging-${BUILD_ID}'

  # 7. Integration Tests for MCP
  - name: 'postman/newman'
    args:
      - 'run'
      - 'tests/collections/aixtiv-symphony-mcp.postman_collection.json'
      - '--environment'
      - 'tests/environments/aixtiv-symphony-staging.postman_environment.json'
      - '--reporters'
      - 'json,cli'
      - '--reporter-json-export'
      - 'newman-mcp-staging-results.json'

  # 8. Deploy to Production (us-west1-a) - ONLY IF TESTS PASS
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_CORE_SERVICE_NAME}-production'
      - '--image=${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}:${BUILD_ID}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--port=8080'
      - '--cpu=4'
      - '--memory=8Gi'
      - '--max-instances=50'
      - '--min-instances=2'
      - '--concurrency=100'
      - '--timeout=3600s'
      - '--set-env-vars=NODE_ENV=production,ENVIRONMENT_ZONE=${_PRODUCTION_ZONE},AIXTIV_VERSION=1.0.0,DIAMOND_CLI_VERSION=latest,QUANTUM_ORCHESTRATION_VERSION=2.4.7,TRINITY_MODE=active,CTTT_ENABLED=true,NEWMAN_TESTING=enabled,SELF_HEALING=true,QB_LUCY_ACTIVE=true,MOCOA_ORCHESTRATION=enabled,BUILD_ID=${BUILD_ID}'
      - '--set-secrets=ELEVENLABS_API_KEY=ELEVENLABS_API_KEY:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest'
      - '--allow-unauthenticated'
      - '--tag=production-${BUILD_ID}'

  # 9. Production MCP Service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_MCP_SERVICE_NAME}-production'
      - '--image=${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}:${BUILD_ID}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--port=8080'
      - '--cpu=4'
      - '--memory=8Gi'
      - '--max-instances=50'
      - '--min-instances=2'
      - '--concurrency=100'
      - '--set-env-vars=NODE_ENV=production,SERVICE_TYPE=mcp,MCP_MASTER_SERVER=mcp.asoos.2100.cool,MCP_COMPANIES_COUNT=10000,BUILD_ID=${BUILD_ID}'
      - '--set-secrets=ELEVENLABS_API_KEY=ELEVENLABS_API_KEY:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest'
      - '--allow-unauthenticated'
      - '--tag=mcp-production-${BUILD_ID}'

  # 10. Final Production Validation
  - name: 'postman/newman'
    args:
      - 'run'
      - 'tests/collections/aixtiv-symphony-production.postman_collection.json'
      - '--environment'
      - 'tests/environments/aixtiv-symphony-production.postman_environment.json'
      - '--reporters'
      - 'json,cli'
      - '--reporter-json-export'
      - 'newman-production-results.json'

  # 11. Diamond SAO Self-Healing Activation
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üíé Activating Diamond SAO Self-Healing Systems..."
        gcloud run services update ${_CORE_SERVICE_NAME}-production --region=${_REGION} --set-env-vars=SELF_HEALING_ACTIVE=true,DIAMOND_SAO_MODE=production
        echo "‚úÖ Diamond SAO Systems Activated"

# Build Configuration - LOCKED STANDARDS
timeout: '3600s'
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY

# Container Registry Images
images:
  - '${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}:latest'
  - '${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}:${BUILD_ID}'

# Artifact Registry (Future-Proof)
artifacts:
  images:
    - '${_REGISTRY}/$PROJECT_ID/${_PROJECT_NAME}'
